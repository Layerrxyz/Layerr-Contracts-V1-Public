const {
  loadFixture,
} = require("@nomicfoundation/hardhat-network-helpers");
const { anyValue } = require("@nomicfoundation/hardhat-chai-matchers/withArgs");
const { expect } = require("chai");

const {signCall, signChainlessCall} = require("../src/js/test_wallet_signer");

const signer_address = "0xbe93f9bacbcffc8ee6663f2647917ed7a20a57bb";
const oracle_signer = "0xe03c66583975b44958c53687ea1100adce60f7e7";


const Create2Nonce0Deployer = "0x4c8d290a1b368ac4728d83a9e8321fc3af2b39b1";
const Create2Nonce0Bytecode = "0x601f80600e600039806000f350fe60003681823780368234f58015156014578182fd5b80825250506014600cf3";
const Create2Nonce0Address = "0x7A0D94F55792C434d74a40883C6ed8545E406D12";
const Create2InitialFactoryAddress = "0xcfa3a7637547094ff06246817a35b8333c315196";
const Create2FactoryABI = '[{"constant":true,"inputs":[{"name":"deploymentAddress","type":"address"}],"name":"hasBeenDeployed","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"salt","type":"bytes32"},{"name":"initializationCode","type":"bytes"}],"name":"safeCreate2","outputs":[{"name":"deploymentAddress","type":"address"}],"payable":true,"stateMutability":"payable","type":"function"},{"constant":true,"inputs":[{"name":"salt","type":"bytes32"},{"name":"initCode","type":"bytes"}],"name":"findCreate2Address","outputs":[{"name":"deploymentAddress","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"salt","type":"bytes32"},{"name":"initCodeHash","type":"bytes32"}],"name":"findCreate2AddressViaHash","outputs":[{"name":"deploymentAddress","type":"address"}],"payable":false,"stateMutability":"view","type":"function"}]';
const Create2FactoryBytecode = '0x608060405234801561001057600080fd5b50610833806100206000396000f3fe60806040526004361061003f5760003560e01c806308508b8f1461004457806364e030871461009857806385cf97ab14610138578063a49a7c90146101bc575b600080fd5b34801561005057600080fd5b506100846004803603602081101561006757600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166101ec565b604080519115158252519081900360200190f35b61010f600480360360408110156100ae57600080fd5b813591908101906040810160208201356401000000008111156100d057600080fd5b8201836020820111156100e257600080fd5b8035906020019184600183028401116401000000008311171561010457600080fd5b509092509050610217565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b34801561014457600080fd5b5061010f6004803603604081101561015b57600080fd5b8135919081019060408101602082013564010000000081111561017d57600080fd5b82018360208201111561018f57600080fd5b803590602001918460018302840111640100000000831117156101b157600080fd5b509092509050610592565b3480156101c857600080fd5b5061010f600480360360408110156101df57600080fd5b508035906020013561069e565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205460ff1690565b600083606081901c33148061024c57507fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008116155b6102a1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260458152602001806107746045913960600191505060405180910390fd5b606084848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250604051855195965090943094508b93508692506020918201918291908401908083835b6020831061033557805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe090920191602091820191016102f8565b51815160209384036101000a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff018019909216911617905260408051929094018281037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00183528085528251928201929092207fff000000000000000000000000000000000000000000000000000000000000008383015260609890981b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016602183015260358201969096526055808201979097528251808203909701875260750182525084519484019490942073ffffffffffffffffffffffffffffffffffffffff81166000908152938490529390922054929350505060ff16156104a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603f815260200180610735603f913960400191505060405180910390fd5b81602001825188818334f5955050508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161461053a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260468152602001806107b96046913960600191505060405180910390fd5b50505073ffffffffffffffffffffffffffffffffffffffff8116600090815260208190526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790559392505050565b6000308484846040516020018083838082843760408051919093018181037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe001825280845281516020928301207fff000000000000000000000000000000000000000000000000000000000000008383015260609990991b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000166021820152603581019790975260558088019890985282518088039098018852607590960182525085519585019590952073ffffffffffffffffffffffffffffffffffffffff81166000908152948590529490932054939450505060ff909116159050610697575060005b9392505050565b604080517fff000000000000000000000000000000000000000000000000000000000000006020808301919091523060601b6021830152603582018590526055808301859052835180840390910181526075909201835281519181019190912073ffffffffffffffffffffffffffffffffffffffff81166000908152918290529190205460ff161561072e575060005b9291505056fe496e76616c696420636f6e7472616374206372656174696f6e202d20636f6e74726163742068617320616c7265616479206265656e206465706c6f7965642e496e76616c69642073616c74202d206669727374203230206279746573206f66207468652073616c74206d757374206d617463682063616c6c696e6720616464726573732e4661696c656420746f206465706c6f7920636f6e7472616374207573696e672070726f76696465642073616c7420616e6420696e697469616c697a6174696f6e20636f64652ea265627a7a723058202bdc55310d97c4088f18acf04253db593f0914059f0c781a9df3624dcef0d1cf64736f6c634300050a0032';
const Create2FactoryDeploymentSalt = '0x0000000000000000000000000000000000000000f4b0218f13a6440a6f020000';
const Create2FactoryAddress = '0x0000000000FFe8B47B3e2130213B802212439497';

const DelegateCashDeploymentSalt = '0x00000000000000000000000000000000000000008b99e5a778edb02572010000';
const DelegateCashBytecode = '';
const DelegateCashABI = '[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"vault","type":"address"},{"indexed":false,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"bool","name":"value","type":"bool"}],"name":"DelegateForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"vault","type":"address"},{"indexed":false,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"address","name":"contract_","type":"address"},{"indexed":false,"internalType":"bool","name":"value","type":"bool"}],"name":"DelegateForContract","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"vault","type":"address"},{"indexed":false,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"address","name":"contract_","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"bool","name":"value","type":"bool"}],"name":"DelegateForToken","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"vault","type":"address"}],"name":"RevokeAllDelegates","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"vault","type":"address"},{"indexed":false,"internalType":"address","name":"delegate","type":"address"}],"name":"RevokeDelegate","type":"event"},{"inputs":[{"internalType":"address","name":"delegate","type":"address"},{"internalType":"address","name":"vault","type":"address"}],"name":"checkDelegateForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegate","type":"address"},{"internalType":"address","name":"vault","type":"address"},{"internalType":"address","name":"contract_","type":"address"}],"name":"checkDelegateForContract","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegate","type":"address"},{"internalType":"address","name":"vault","type":"address"},{"internalType":"address","name":"contract_","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"checkDelegateForToken","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegate","type":"address"},{"internalType":"bool","name":"value","type":"bool"}],"name":"delegateForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegate","type":"address"},{"internalType":"address","name":"contract_","type":"address"},{"internalType":"bool","name":"value","type":"bool"}],"name":"delegateForContract","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegate","type":"address"},{"internalType":"address","name":"contract_","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bool","name":"value","type":"bool"}],"name":"delegateForToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"vault","type":"address"}],"name":"getContractLevelDelegations","outputs":[{"components":[{"internalType":"address","name":"contract_","type":"address"},{"internalType":"address","name":"delegate","type":"address"}],"internalType":"struct IDelegationRegistry.ContractDelegation[]","name":"contractDelegations","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"vault","type":"address"}],"name":"getDelegatesForAll","outputs":[{"internalType":"address[]","name":"delegates","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"vault","type":"address"},{"internalType":"address","name":"contract_","type":"address"}],"name":"getDelegatesForContract","outputs":[{"internalType":"address[]","name":"delegates","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"vault","type":"address"},{"internalType":"address","name":"contract_","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getDelegatesForToken","outputs":[{"internalType":"address[]","name":"delegates","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegate","type":"address"}],"name":"getDelegationsByDelegate","outputs":[{"components":[{"internalType":"enum IDelegationRegistry.DelegationType","name":"type_","type":"uint8"},{"internalType":"address","name":"vault","type":"address"},{"internalType":"address","name":"delegate","type":"address"},{"internalType":"address","name":"contract_","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"internalType":"struct IDelegationRegistry.DelegationInfo[]","name":"info","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"vault","type":"address"}],"name":"getTokenLevelDelegations","outputs":[{"components":[{"internalType":"address","name":"contract_","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"delegate","type":"address"}],"internalType":"struct IDelegationRegistry.TokenDelegation[]","name":"tokenDelegations","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"revokeAllDelegates","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegate","type":"address"}],"name":"revokeDelegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"vault","type":"address"}],"name":"revokeSelf","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}]';
const DelegateCashAddress = '0x00000000000076A84feF008CDAbe6409d2FE638B'

const DefaultOperatorFilterAddress = '0x000000000000AAeB6D7670E522A718067333cd4E';
const DefaultOperatorFilterBytecode = '0x608060405234801561001057600080fd5b50613848806100206000396000f3fe608060405234801561001057600080fd5b50600436106101985760003560e01c8063712fc00b116100e3578063b314d4141161008c578063c430880511610066578063c4308805146103d1578063c6171134146103e4578063e4aecb54146103f757600080fd5b8063b314d4141461035b578063bbd652c71461036e578063c3c5a5471461039657600080fd5b8063a14584c1116100bd578063a14584c114610314578063a2f367ab14610327578063a6529eb51461033a57600080fd5b8063712fc00b146102db5780637d3e3dbe146102ee578063a0af29031461030157600080fd5b80633f1cc5fa116101455780635745ae281161011f5780635745ae28146102855780635eae3173146102a55780636af0c315146102c857600080fd5b80633f1cc5fa1461024c5780634420e4861461025f57806355940e511461027257600080fd5b80632ec2c246116101765780632ec2c246146101ee57806334a0dc10146102015780633c5030bb1461021457600080fd5b8063063298b61461019d5780631e06b4b4146101b257806322fa2762146101c5575b600080fd5b6101b06101ab366004613484565b61040a565b005b6101b06101c03660046134eb565b610854565b6101d86101d3366004613524565b610b57565b6040516101e59190613541565b60405180910390f35b6101b06101fc366004613524565b610bec565b6101b061020f366004613585565b610eaa565b610227610222366004613524565b611168565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101e5565b61022761025a3660046135ba565b61121b565b6101b061026d366004613524565b6112bc565b6102276102803660046135ba565b6114b7565b610298610293366004613524565b6114e6565b6040516101e591906135e6565b6102b86102b33660046134eb565b611517565b60405190151581526020016101e5565b6102b86102d63660046135ba565b6115be565b6101b06102e9366004613634565b61164d565b6101b06102fc3660046134eb565b6119cd565b6101b061030f3660046134eb565b611da3565b6101b0610322366004613484565b612081565b6101b0610335366004613672565b61244f565b61034d6103483660046135ba565b6127b6565b6040519081526020016101e5565b6101b06103693660046134eb565b612845565b61034d61037c366004613524565b73ffffffffffffffffffffffffffffffffffffffff163f90565b6102b86103a4366004613524565b73ffffffffffffffffffffffffffffffffffffffff90811660009081526002602052604090205416151590565b6102986103df366004613524565b612d63565b6102b86103f23660046134eb565b612df1565b6102b86104053660046134eb565b612f4c565b833373ffffffffffffffffffffffffffffffffffffffff821614610575578073ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156104ad575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526104aa918101906136b0565b60015b610524573d8080156104db576040519150601f19603f3d011682016040523d82523d6000602084013e6104e0565b606091505b50805160000361051c576040517fb2c1414000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b3373ffffffffffffffffffffffffffffffffffffffff821614610573576040517ffcf5eff800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b73ffffffffffffffffffffffffffffffffffffffff80861660009081526002602052604090205416806105f1576040517fbfc6c33700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff871660048201526024015b60405180910390fd5b8573ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461066e576040517f04af4d6900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff821660048201526024016105e8565b73ffffffffffffffffffffffffffffffffffffffff8616600090815260016020526040902084846107225760005b8181101561071c5760008888838181106106b8576106b86136cd565b90506020020135905060006106d68286612fdb90919063ffffffff16565b905080610712576040517f478730a8000000000000000000000000000000000000000000000000000000008152600481018390526024016105e8565b505060010161069c565b506107f7565b60005b818110156107f5576000888883818110610741576107416136cd565b9050602002013590507fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081036107a3576040517ff575ead800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006107af8583612fe7565b9050806107eb576040517f186bea00000000000000000000000000000000000000000000000000000000008152600481018390526024016105e8565b5050600101610725565b505b8415158873ffffffffffffffffffffffffffffffffffffffff167f34e9f70c5a16a4df2a396cf0cbc4735eb3c7fb6ae40aaa0b34be7720121d1b9689896040516108429291906136fc565b60405180910390a35050505050505050565b813373ffffffffffffffffffffffffffffffffffffffff821614610976578073ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156108f7575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526108f4918101906136b0565b60015b610925573d8080156104db576040519150601f19603f3d011682016040523d82523d6000602084013e6104e0565b3373ffffffffffffffffffffffffffffffffffffffff821614610974576040517ffcf5eff800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109db576040517f1acab6b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8084166000908152600260205260409020541680610a52576040517fbfc6c33700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff851660048201526024016105e8565b8373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610acf576040517f04af4d6900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff821660048201526024016105e8565b73ffffffffffffffffffffffffffffffffffffffff8084166000908152600260205260409020541680610b46576040517fbfc6c33700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff851660048201526024016105e8565b610b508585612ff3565b5050505050565b73ffffffffffffffffffffffffffffffffffffffff80821660008181526002602052604090205460609216908114610bbe5773ffffffffffffffffffffffffffffffffffffffff81166000908152600160205260409020610bb79061318d565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600160205260409020610bb79061318d565b803373ffffffffffffffffffffffffffffffffffffffff821614610d0e578073ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610c8f575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252610c8c918101906136b0565b60015b610cbd573d8080156104db576040519150601f19603f3d011682016040523d82523d6000602084013e6104e0565b3373ffffffffffffffffffffffffffffffffffffffff821614610d0c576040517ffcf5eff800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b73ffffffffffffffffffffffffffffffffffffffff8083166000908152600260205260409020541680610d85576040517fbfc6c33700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff841660048201526024016105e8565b8273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610e305773ffffffffffffffffffffffffffffffffffffffff81166000908152600360205260409020610de7908461319a565b5060405160009073ffffffffffffffffffffffffffffffffffffffff80841691908616907e38c54977604f1a5c0a3604cbbecd0153c81e3131799ead95755e8bb5d5b9e8908490a45b73ffffffffffffffffffffffffffffffffffffffff831660008181526002602052604080822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055519091907f86d03f430c7616021073d7a71766f632f1ce19f289aa989534d9f4732253eb59908390a3505050565b813373ffffffffffffffffffffffffffffffffffffffff821614610fcc578073ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610f4d575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252610f4a918101906136b0565b60015b610f7b573d8080156104db576040519150601f19603f3d011682016040523d82523d6000602084013e6104e0565b3373ffffffffffffffffffffffffffffffffffffffff821614610fca576040517ffcf5eff800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b73ffffffffffffffffffffffffffffffffffffffff8084166000908152600260205260409020541680611043576040517fbfc6c33700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff851660048201526024016105e8565b8373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036110a8576040517f237e6c2800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660009081526003602052604090206110d7908561319a565b5073ffffffffffffffffffffffffffffffffffffffff80851660008181526002602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001684179055519092841691907e38c54977604f1a5c0a3604cbbecd0153c81e3131799ead95755e8bb5d5b9e8908490a48215611162576111628482612ff3565b50505050565b73ffffffffffffffffffffffffffffffffffffffff80821660009081526002602052604090205416806111df576040517fbfc6c33700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff831660048201526024016105e8565b8173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611216575060005b919050565b73ffffffffffffffffffffffffffffffffffffffff8083166000818152600260205260408120549092169081146112835773ffffffffffffffffffffffffffffffffffffffff8116600090815260208190526040902061127b90846131bc565b9150506112b6565b73ffffffffffffffffffffffffffffffffffffffff841660009081526020819052604090206112b290846131bc565b9150505b92915050565b803373ffffffffffffffffffffffffffffffffffffffff8216146113de578073ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561135f575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261135c918101906136b0565b60015b61138d573d8080156104db576040519150601f19603f3d011682016040523d82523d6000602084013e6104e0565b3373ffffffffffffffffffffffffffffffffffffffff8216146113dc576040517ffcf5eff800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b73ffffffffffffffffffffffffffffffffffffffff828116600090815260026020526040902054161561143d576040517f3a81d6fc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821660008181526002602052604080822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000168417905551600192917f86d03f430c7616021073d7a71766f632f1ce19f289aa989534d9f4732253eb5991a35050565b73ffffffffffffffffffffffffffffffffffffffff82166000908152600360205260408120610bb790836131bc565b73ffffffffffffffffffffffffffffffffffffffff811660009081526003602052604090206060906112b69061318d565b73ffffffffffffffffffffffffffffffffffffffff82811660008181526002602052604081205490928085163f9291169081146115865773ffffffffffffffffffffffffffffffffffffffff8116600090815260016020526040902061157d90836131c8565b925050506112b6565b73ffffffffffffffffffffffffffffffffffffffff851660009081526001602052604090206115b590836131c8565b95945050505050565b73ffffffffffffffffffffffffffffffffffffffff80831660008181526002602052604081205490921690811461161e5773ffffffffffffffffffffffffffffffffffffffff8116600090815260016020526040902061127b90846131c8565b73ffffffffffffffffffffffffffffffffffffffff841660009081526001602052604090206112b290846131c8565b823373ffffffffffffffffffffffffffffffffffffffff82161461176f578073ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156116f0575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526116ed918101906136b0565b60015b61171e573d8080156104db576040519150601f19603f3d011682016040523d82523d6000602084013e6104e0565b3373ffffffffffffffffffffffffffffffffffffffff82161461176d576040517ffcf5eff800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47083036117c8576040517ff575ead800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff808516600090815260026020526040902054168061183f576040517fbfc6c33700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff861660048201526024016105e8565b8473ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146118bc576040517f04af4d6900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff821660048201526024016105e8565b73ffffffffffffffffffffffffffffffffffffffff85166000908152600160205260409020836119345760006118f28287612fdb565b90508061192e576040517f478730a8000000000000000000000000000000000000000000000000000000008152600481018790526024016105e8565b5061197e565b60006119408287612fe7565b90508061197c576040517f186bea00000000000000000000000000000000000000000000000000000000008152600481018790526024016105e8565b505b831515858773ffffffffffffffffffffffffffffffffffffffff167fb8036058bafea884aabc446ca15619fd86f5464a4ad96f64164ad6f77444354d60405160405180910390a4505050505050565b813373ffffffffffffffffffffffffffffffffffffffff821614611aef578073ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611a70575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252611a6d918101906136b0565b60015b611a9e573d8080156104db576040519150601f19603f3d011682016040523d82523d6000602084013e6104e0565b3373ffffffffffffffffffffffffffffffffffffffff821614611aed576040517ffcf5eff800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b73ffffffffffffffffffffffffffffffffffffffff808416600090815260026020526040902054168015611b4f576040517f3a81d6fc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611bb4576040517f347f118f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8084166000908152600260205260409020541680611c2b576040517fbfc6c33700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff851660048201526024016105e8565b8373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611ca8576040517f768e549c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff851660048201526024016105e8565b73ffffffffffffffffffffffffffffffffffffffff858116600090815260026020908152604080832080547fffffffffffffffffffffffff00000000000000000000000000000000000000001694891694851790559282526003905220611d0f90866131e0565b5060405160019073ffffffffffffffffffffffffffffffffffffffff8716907f86d03f430c7616021073d7a71766f632f1ce19f289aa989534d9f4732253eb5990600090a360405160019073ffffffffffffffffffffffffffffffffffffffff80871691908816907e38c54977604f1a5c0a3604cbbecd0153c81e3131799ead95755e8bb5d5b9e890600090a45050505050565b813373ffffffffffffffffffffffffffffffffffffffff821614611ec5578073ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611e46575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252611e43918101906136b0565b60015b611e74573d8080156104db576040519150601f19603f3d011682016040523d82523d6000602084013e6104e0565b3373ffffffffffffffffffffffffffffffffffffffff821614611ec3576040517ffcf5eff800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b8273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611f2a576040517f1acab6b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff808416600090815260026020526040902054168015611f8a576040517f3a81d6fc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8084166000908152600260205260409020541680612001576040517fbfc6c33700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff851660048201526024016105e8565b73ffffffffffffffffffffffffffffffffffffffff851660008181526002602052604080822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000168417905551600192917f86d03f430c7616021073d7a71766f632f1ce19f289aa989534d9f4732253eb5991a3610b508585612ff3565b833373ffffffffffffffffffffffffffffffffffffffff8216146121a3578073ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015612124575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252612121918101906136b0565b60015b612152573d8080156104db576040519150601f19603f3d011682016040523d82523d6000602084013e6104e0565b3373ffffffffffffffffffffffffffffffffffffffff8216146121a1576040517ffcf5eff800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b73ffffffffffffffffffffffffffffffffffffffff808616600090815260026020526040902054168061221a576040517fbfc6c33700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff871660048201526024016105e8565b8573ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614612297576040517f04af4d6900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff821660048201526024016105e8565b73ffffffffffffffffffffffffffffffffffffffff8616600090815260208190526040902084846123655760005b8181101561235f5760008888838181106122e1576122e16136cd565b90506020020160208101906122f69190613524565b90506000612304858361319a565b905080612355576040517f45525c0e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff831660048201526024016105e8565b50506001016122c5565b50612404565b60005b81811015612402576000888883818110612384576123846136cd565b90506020020160208101906123999190613524565b905060006123a785836131e0565b9050806123f8576040517f0bb4423400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff831660048201526024016105e8565b5050600101612368565b505b8415158873ffffffffffffffffffffffffffffffffffffffff167f02b85afdacb82d5512c6f05566b3018677ffcbd7e5f75e498bc64081131cbd6c898960405161084292919061374e565b823373ffffffffffffffffffffffffffffffffffffffff821614612571578073ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156124f2575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526124ef918101906136b0565b60015b612520573d8080156104db576040519150601f19603f3d011682016040523d82523d6000602084013e6104e0565b3373ffffffffffffffffffffffffffffffffffffffff82161461256f576040517ffcf5eff800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b73ffffffffffffffffffffffffffffffffffffffff80851660009081526002602052604090205416806125e8576040517fbfc6c33700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff861660048201526024016105e8565b8473ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614612665576040517f04af4d6900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff821660048201526024016105e8565b73ffffffffffffffffffffffffffffffffffffffff85166000908152602081905260409020836126f257600061269b828761319a565b9050806126ec576040517f45525c0e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff871660048201526024016105e8565b50612751565b60006126fe82876131e0565b90508061274f576040517f0bb4423400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff871660048201526024016105e8565b505b8315158573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167f2738289d9deecdc30eb8ffc42876633caecca1ffa166e4efa89f408e17373a1a60405160405180910390a4505050505050565b73ffffffffffffffffffffffffffffffffffffffff8083166000818152600260205260408120549092169081146128165773ffffffffffffffffffffffffffffffffffffffff8116600090815260016020526040902061127b90846131bc565b73ffffffffffffffffffffffffffffffffffffffff841660009081526001602052604090206112b290846131bc565b813373ffffffffffffffffffffffffffffffffffffffff821614612967578073ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156128e8575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526128e5918101906136b0565b60015b612916573d8080156104db576040519150601f19603f3d011682016040523d82523d6000602084013e6104e0565b3373ffffffffffffffffffffffffffffffffffffffff821614612965576040517ffcf5eff800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036129cc576040517f347f118f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216612a19576040517fb05574d300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8084166000908152600260205260409020541680612a90576040517fbfc6c33700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff851660048201526024016105e8565b8273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603612b0d576040517f73a4164900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff841660048201526024016105e8565b73ffffffffffffffffffffffffffffffffffffffff8084166000908152600260205260409020541680612b84576040517fbfc6c33700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff851660048201526024016105e8565b8373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614612c01576040517f768e549c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff851660048201526024016105e8565b8473ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614612cac5773ffffffffffffffffffffffffffffffffffffffff82166000908152600360205260409020612c63908661319a565b5060405160009073ffffffffffffffffffffffffffffffffffffffff80851691908816907e38c54977604f1a5c0a3604cbbecd0153c81e3131799ead95755e8bb5d5b9e8908490a45b73ffffffffffffffffffffffffffffffffffffffff858116600090815260026020908152604080832080547fffffffffffffffffffffffff00000000000000000000000000000000000000001694891694851790559282526003905220612d1390866131e0565b5060405160019073ffffffffffffffffffffffffffffffffffffffff80871691908816907e38c54977604f1a5c0a3604cbbecd0153c81e3131799ead95755e8bb5d5b9e890600090a45050505050565b73ffffffffffffffffffffffffffffffffffffffff80821660008181526002602052604090205460609216908114612dc35773ffffffffffffffffffffffffffffffffffffffff81166000908152602081905260409020610bb79061318d565b73ffffffffffffffffffffffffffffffffffffffff83166000908152602081905260409020610bb79061318d565b73ffffffffffffffffffffffffffffffffffffffff8083166000908152600260205260408120549091168015612f425773ffffffffffffffffffffffffffffffffffffffff81166000908152602081815260408083206001909252909120612e598286613202565b15612ea8576040517fa8cf495d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff861660048201526024016105e8565b73ffffffffffffffffffffffffffffffffffffffff85163b15612f3f5773ffffffffffffffffffffffffffffffffffffffff85163f612ee782826131c8565b15612f3d576040517f5f3853a900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff87166004820152602481018290526044016105e8565b505b50505b5060019392505050565b73ffffffffffffffffffffffffffffffffffffffff808316600081815260026020526040812054909216908114612fac5773ffffffffffffffffffffffffffffffffffffffff8116600090815260208190526040902061127b9084613202565b73ffffffffffffffffffffffffffffffffffffffff841660009081526020819052604090206112b29084613202565b6000610bb78383613231565b6000610bb78383613324565b73ffffffffffffffffffffffffffffffffffffffff811660009081526020818152604080832060019092528220909161302b83613373565b9050600061303883613373565b905060005b828110156130e057600061305186836131bc565b73ffffffffffffffffffffffffffffffffffffffff891660009081526020819052604081209192509061308490836131e0565b905080156130d65760405160019073ffffffffffffffffffffffffffffffffffffffff80851691908c16907f2738289d9deecdc30eb8ffc42876633caecca1ffa166e4efa89f408e17373a1a90600090a45b505060010161303d565b5060005b818110156131845760006130f885836131bc565b73ffffffffffffffffffffffffffffffffffffffff891660009081526001602052604081209192509061312b9083612fe7565b9050801561317a57604051600190839073ffffffffffffffffffffffffffffffffffffffff8c16907fb8036058bafea884aabc446ca15619fd86f5464a4ad96f64164ad6f77444354d90600090a45b50506001016130e4565b50505050505050565b60606000610bb78361337d565b6000610bb78373ffffffffffffffffffffffffffffffffffffffff8416613231565b6000610bb783836133d9565b60008181526001830160205260408120541515610bb7565b6000610bb78373ffffffffffffffffffffffffffffffffffffffff8416613324565b73ffffffffffffffffffffffffffffffffffffffff811660009081526001830160205260408120541515610bb7565b6000818152600183016020526040812054801561331a5760006132556001836137a9565b8554909150600090613269906001906137a9565b90508181146132ce576000866000018281548110613289576132896136cd565b90600052602060002001549050808760000184815481106132ac576132ac6136cd565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806132df576132df6137e3565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506112b6565b60009150506112b6565b600081815260018301602052604081205461336b575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556112b6565b5060006112b6565b60006112b6825490565b6060816000018054806020026020016040519081016040528092919081815260200182805480156133cd57602002820191906000526020600020905b8154815260200190600101908083116133b9575b50505050509050919050565b60008260000182815481106133f0576133f06136cd565b9060005260206000200154905092915050565b73ffffffffffffffffffffffffffffffffffffffff8116811461342557600080fd5b50565b60008083601f84011261343a57600080fd5b50813567ffffffffffffffff81111561345257600080fd5b6020830191508360208260051b850101111561346d57600080fd5b9250929050565b8035801515811461121657600080fd5b6000806000806060858703121561349a57600080fd5b84356134a581613403565b9350602085013567ffffffffffffffff8111156134c157600080fd5b6134cd87828801613428565b90945092506134e0905060408601613474565b905092959194509250565b600080604083850312156134fe57600080fd5b823561350981613403565b9150602083013561351981613403565b809150509250929050565b60006020828403121561353657600080fd5b8135610bb781613403565b6020808252825182820181905260009190848201906040850190845b818110156135795783518352928401929184019160010161355d565b50909695505050505050565b6000806040838503121561359857600080fd5b82356135a381613403565b91506135b160208401613474565b90509250929050565b600080604083850312156135cd57600080fd5b82356135d881613403565b946020939093013593505050565b6020808252825182820181905260009190848201906040850190845b8181101561357957835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101613602565b60008060006060848603121561364957600080fd5b833561365481613403565b92506020840135915061366960408501613474565b90509250925092565b60008060006060848603121561368757600080fd5b833561369281613403565b925060208401356136a281613403565b915061366960408501613474565b6000602082840312156136c257600080fd5b8151610bb781613403565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020815281602082015260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83111561373557600080fd5b8260051b80856040850137919091016040019392505050565b60208082528181018390526000908460408401835b8681101561379e57823561377681613403565b73ffffffffffffffffffffffffffffffffffffffff1682529183019190830190600101613763565b509695505050505050565b818103818111156112b6577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220d2eb4529f96412ccc09b0c0c04d7ff105932b0b691aea14b7aa158442949a08664736f6c63430008110033';
const DefaultOperatorFilterDeploymentSalt = '0x0000000000000000000000000000000000000000d40ba0de8b5adb1cc4070000';
const DefaultOperatorFilterABI = '[{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"AddressAlreadyFiltered","type":"error"},{"inputs":[{"internalType":"address","name":"filtered","type":"address"}],"name":"AddressFiltered","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"AddressNotFiltered","type":"error"},{"inputs":[],"name":"AlreadyRegistered","type":"error"},{"inputs":[{"internalType":"address","name":"subscription","type":"address"}],"name":"AlreadySubscribed","type":"error"},{"inputs":[],"name":"CannotCopyFromSelf","type":"error"},{"inputs":[],"name":"CannotFilterEOAs","type":"error"},{"inputs":[{"internalType":"address","name":"registrant","type":"address"}],"name":"CannotSubscribeToRegistrantWithSubscription","type":"error"},{"inputs":[],"name":"CannotSubscribeToSelf","type":"error"},{"inputs":[],"name":"CannotSubscribeToZeroAddress","type":"error"},{"inputs":[{"internalType":"address","name":"subscription","type":"address"}],"name":"CannotUpdateWhileSubscribed","type":"error"},{"inputs":[{"internalType":"bytes32","name":"codeHash","type":"bytes32"}],"name":"CodeHashAlreadyFiltered","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"codeHash","type":"bytes32"}],"name":"CodeHashFiltered","type":"error"},{"inputs":[{"internalType":"bytes32","name":"codeHash","type":"bytes32"}],"name":"CodeHashNotFiltered","type":"error"},{"inputs":[],"name":"NotOwnable","type":"error"},{"inputs":[{"internalType":"address","name":"registrant","type":"address"}],"name":"NotRegistered","type":"error"},{"inputs":[],"name":"NotSubscribed","type":"error"},{"inputs":[],"name":"OnlyAddressOrOwner","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"registrant","type":"address"},{"indexed":true,"internalType":"bytes32","name":"codeHash","type":"bytes32"},{"indexed":true,"internalType":"bool","name":"filtered","type":"bool"}],"name":"CodeHashUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"registrant","type":"address"},{"indexed":false,"internalType":"bytes32[]","name":"codeHashes","type":"bytes32[]"},{"indexed":true,"internalType":"bool","name":"filtered","type":"bool"}],"name":"CodeHashesUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"registrant","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"bool","name":"filtered","type":"bool"}],"name":"OperatorUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"registrant","type":"address"},{"indexed":false,"internalType":"address[]","name":"operators","type":"address[]"},{"indexed":true,"internalType":"bool","name":"filtered","type":"bool"}],"name":"OperatorsUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"registrant","type":"address"},{"indexed":true,"internalType":"bool","name":"registered","type":"bool"}],"name":"RegistrationUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"registrant","type":"address"},{"indexed":true,"internalType":"address","name":"subscription","type":"address"},{"indexed":true,"internalType":"bool","name":"subscribed","type":"bool"}],"name":"SubscriptionUpdated","type":"event"},{"inputs":[{"internalType":"address","name":"a","type":"address"}],"name":"codeHashOf","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"registrant","type":"address"},{"internalType":"address","name":"registrantToCopy","type":"address"}],"name":"copyEntriesOf","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"registrant","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"filteredCodeHashAt","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"registrant","type":"address"}],"name":"filteredCodeHashes","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"registrant","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"filteredOperatorAt","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"registrant","type":"address"}],"name":"filteredOperators","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"registrant","type":"address"},{"internalType":"bytes32","name":"codeHash","type":"bytes32"}],"name":"isCodeHashFiltered","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"registrant","type":"address"},{"internalType":"address","name":"operatorWithCode","type":"address"}],"name":"isCodeHashOfFiltered","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"registrant","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isOperatorAllowed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"registrant","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isOperatorFiltered","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"registrant","type":"address"}],"name":"isRegistered","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"registrant","type":"address"}],"name":"register","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"registrant","type":"address"},{"internalType":"address","name":"registrantToCopy","type":"address"}],"name":"registerAndCopyEntries","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"registrant","type":"address"},{"internalType":"address","name":"subscription","type":"address"}],"name":"registerAndSubscribe","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"registrant","type":"address"},{"internalType":"address","name":"newSubscription","type":"address"}],"name":"subscribe","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"registrant","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"subscriberAt","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"registrant","type":"address"}],"name":"subscribers","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"registrant","type":"address"}],"name":"subscriptionOf","outputs":[{"internalType":"address","name":"subscription","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"registrant","type":"address"}],"name":"unregister","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"registrant","type":"address"},{"internalType":"bool","name":"copyExistingEntries","type":"bool"}],"name":"unsubscribe","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"registrant","type":"address"},{"internalType":"bytes32","name":"codeHash","type":"bytes32"},{"internalType":"bool","name":"filtered","type":"bool"}],"name":"updateCodeHash","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"registrant","type":"address"},{"internalType":"bytes32[]","name":"codeHashes","type":"bytes32[]"},{"internalType":"bool","name":"filtered","type":"bool"}],"name":"updateCodeHashes","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"registrant","type":"address"},{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"filtered","type":"bool"}],"name":"updateOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"registrant","type":"address"},{"internalType":"address[]","name":"operators","type":"address[]"},{"internalType":"bool","name":"filtered","type":"bool"}],"name":"updateOperators","outputs":[],"stateMutability":"nonpayable","type":"function"}]';

const opensea_operator_filter  = "0x3cc6CddA760b79bAfa08dF41ECFA224f810dCeB6";
const opensea_operator_filter2 = "0x0000000000000000000000000000000000000000";

const layerrWalletPK1 = "9999999999999999999999999999999999999999999999999999999999999999";
const layerrWalletPK2 = "9999999999999999999999999999999999999999999999999999999999999998";
const layerrWalletPK3 = "9999999999999999999999999999999999999999999999999999999999999997";
const layerrWalletPK4 = "9999999999999999999999999999999999999999999999999999999999999996";

describe("LayerrTest", function () {
  // We define a fixture to reuse the same setup in every test.
  // We use loadFixture to run this setup once, snapshot that state,
  // and reset Hardhat Network to that snapshot in every test.
  async function deployLayerr() {

    // Contracts are deployed using the first signer/account by default
    const [owner, address2, address3, address4, address5, address6] = await ethers.getSigners();

    const LayerrMinterArtifact = await hre.artifacts.readArtifact("LayerrMinter");
    const LayerrMinterFactory = new hre.ethers.ContractFactory(LayerrMinterArtifact.abi, LayerrMinterArtifact.bytecode, owner);
    const layerrMinter = await LayerrMinterFactory.deploy();

    const Layerr1155Artifact = await hre.artifacts.readArtifact("Layerr1155");
    const Layerr1155Factory = new hre.ethers.ContractFactory(Layerr1155Artifact.abi, Layerr1155Artifact.bytecode, owner);
    const layerr1155 = await Layerr1155Factory.deploy();

    const Layerr721Artifact = await hre.artifacts.readArtifact("Layerr721");
    const Layerr721Factory = new hre.ethers.ContractFactory(Layerr721Artifact.abi, Layerr721Artifact.bytecode, owner);
    const layerr721 = await Layerr721Factory.deploy();

    const LayerrRendererArtifact = await hre.artifacts.readArtifact("LayerrRendererTest");
    const LayerrRendererFactory = new hre.ethers.ContractFactory(LayerrRendererArtifact.abi, LayerrRendererArtifact.bytecode, owner);
    const layerrRenderer = await LayerrRendererFactory.deploy();

    const LayerrProxyArtifact = await hre.artifacts.readArtifact("LayerrProxy");
    const LayerrProxyFactory = new hre.ethers.ContractFactory(LayerrProxyArtifact.abi, LayerrProxyArtifact.bytecode, owner);
    const layerr1155Proxy = await LayerrProxyFactory.deploy(layerr1155.getAddress(), "MyLayerr1155", "ML1155", 10, owner.address, opensea_operator_filter, layerrMinter.getAddress(), layerrRenderer.getAddress(), [signer_address]);
    const layerr721Proxy = await LayerrProxyFactory.deploy(layerr721.getAddress(), "MyLayerr721", "ML721", 10, owner.address, opensea_operator_filter, layerrMinter.getAddress(), layerrRenderer.getAddress(), [signer_address]);

    const Layerr721AArtifact = await hre.artifacts.readArtifact("Layerr721A");
    const Layerr721AFactory = new hre.ethers.ContractFactory(Layerr721AArtifact.abi, Layerr721AArtifact.bytecode, owner);
    const layerr721A = await Layerr721AFactory.deploy();
    const layerr721AProxy = await LayerrProxyFactory.deploy(layerr721A.getAddress(), "MyLayerr721A", "ML721A", 10, owner.address, opensea_operator_filter, layerrMinter.getAddress(), layerrRenderer.getAddress(), [signer_address]);

    const Layerr20Artifact = await hre.artifacts.readArtifact("Layerr20");
    const Layerr20Factory = new hre.ethers.ContractFactory(Layerr20Artifact.abi, Layerr20Artifact.bytecode, owner);
    const layerr20 = await Layerr20Factory.deploy();
    const layerr20Proxy = await LayerrProxyFactory.deploy(layerr20.getAddress(), "MyLayerr20", "ML20", 10, owner.address, opensea_operator_filter, layerrMinter.getAddress(), layerrRenderer.getAddress(), [signer_address]);

    const LayerrInterfaceInspectArtifact = await hre.artifacts.readArtifact("LayerrInterfaceInspect");
    const LayerrInterfaceInspectFactory = new hre.ethers.ContractFactory(LayerrInterfaceInspectArtifact.abi, LayerrInterfaceInspectArtifact.bytecode, owner);
    const layerrInterfaceInspect = await LayerrInterfaceInspectFactory.deploy();

    const LayerrWalletArtifact = await hre.artifacts.readArtifact("LayerrWalletTest");
    const LayerrWalletFactory = new hre.ethers.ContractFactory(LayerrWalletArtifact.abi, LayerrWalletArtifact.bytecode, owner);
    const layerrWallet = await LayerrWalletFactory.deploy();

    //var receipt = await layerr1155Proxy.deployTransaction.wait();
    //console.log(receipt);
    
    const proxiedLayerr1155 = await hre.ethers.getContractAt("Layerr1155", layerr1155Proxy.target);
    const proxiedLayerr721 = await hre.ethers.getContractAt("Layerr721", layerr721Proxy.target);
    const proxiedLayerr721A = await hre.ethers.getContractAt("Layerr721A", layerr721AProxy.target);
    const proxiedLayerr20 = await hre.ethers.getContractAt("Layerr20", layerr20Proxy.target);

    const sendEth1 = { to: "0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2", value: ethers.parseEther("0.1") }
    const receiptTx1 = await address2.sendTransaction(sendEth1);
    await receiptTx1.wait();

    const sendEth2 = { to: "0x617F2E2fD72FD9D5503197092aC168c91465E7f2", value: ethers.parseEther("0.1") }
    const receiptTx2 = await address2.sendTransaction(sendEth2);
    await receiptTx2.wait(); 

    const sendEth3 = { to: signer_address, value: ethers.parseEther("0.1") }
    const receiptTx3 = await address2.sendTransaction(sendEth3);
    await receiptTx3.wait(); 

    const sendEth5 = { to: Create2Nonce0Deployer, value: ethers.parseEther("1.0") }
    const receiptTx5 = await address2.sendTransaction(sendEth5);
    await receiptTx5.wait(); 

    const sendEth6 = { to: opensea_operator_filter, value: ethers.parseEther("1.0") }
    const receiptTx6 = await address2.sendTransaction(sendEth6);
    await receiptTx6.wait();

    const sendEth7 = { to: layerrWallet.target, value: ethers.parseEther("1.0") }
    const receiptTx7 = await address2.sendTransaction(sendEth7);
    await receiptTx7.wait();

    const impersonatedCreate2Nonce0Deployer = await ethers.getImpersonatedSigner(Create2Nonce0Deployer);
    const create2Nonce0Tx = { data: Create2Nonce0Bytecode}
    await impersonatedCreate2Nonce0Deployer.sendTransaction(create2Nonce0Tx);

    const impersonatedOpenseaOperatorFilter = await ethers.getImpersonatedSigner(opensea_operator_filter);
    
    const create2InitialTx = { to: Create2Nonce0Address, data: Create2FactoryBytecode}
    await address2.sendTransaction(create2InitialTx);
    const initialCreate2Factory = new hre.ethers.Contract(Create2InitialFactoryAddress, Create2FactoryABI, address2);
    await initialCreate2Factory.safeCreate2(Create2FactoryDeploymentSalt, Create2FactoryBytecode);
    const create2Factory = new hre.ethers.Contract(Create2FactoryAddress, Create2FactoryABI, owner);
    await create2Factory.safeCreate2(DelegateCashDeploymentSalt, DelegateCashBytecode);
    await create2Factory.safeCreate2(DefaultOperatorFilterDeploymentSalt, DefaultOperatorFilterBytecode);
    const delegateCash = new hre.ethers.Contract(DelegateCashAddress, DelegateCashABI, owner);
    const defaultOperatorFilter = new hre.ethers.Contract(DefaultOperatorFilterAddress, DefaultOperatorFilterABI, impersonatedOpenseaOperatorFilter);

    await defaultOperatorFilter.register(opensea_operator_filter);
    const layerr1155ProxyOF = await LayerrProxyFactory.deploy(layerr1155.getAddress(), "MyLayerr1155", "ML1155", 10, owner.address, opensea_operator_filter, layerrMinter.getAddress(), layerrRenderer.getAddress(), [signer_address]);
    const layerr721ProxyOF = await LayerrProxyFactory.deploy(layerr721.getAddress(), "MyLayerr721", "ML721", 10, owner.address, opensea_operator_filter, layerrMinter.getAddress(), layerrRenderer.getAddress(), [signer_address]);
    

    return { owner, 
      layerrMinter, layerr1155, layerrRenderer, 
      layerr1155Proxy, proxiedLayerr1155, 
      layerr721Proxy, proxiedLayerr721, 
      layerr721AProxy, proxiedLayerr721A, 
      layerr20Proxy, proxiedLayerr20,
      address2, address3, address4, address5, address6,
      layerrInterfaceInspect, delegateCash, layerrWallet };
  }

  describe("Testing...", function () {
    it("Should have the set the signer", async function () {
      const { owner, 
        layerrMinter, layerr1155, layerrRenderer, 
        layerr1155Proxy, proxiedLayerr1155, 
        layerr721Proxy, proxiedLayerr721, 
        layerr721AProxy, proxiedLayerr721A, 
        layerr20Proxy, proxiedLayerr20,
        address2, address3, address4, address5, address6 } = await loadFixture(deployLayerr);

      expect(await layerrMinter.contractAllowedSigner(proxiedLayerr1155.target, signer_address)).to.equal(true);
      expect(await layerrMinter.contractAllowedSigner(proxiedLayerr721.target, signer_address)).to.equal(true);
      expect(await layerrMinter.contractAllowedSigner(proxiedLayerr721A.target, signer_address)).to.equal(true);
      expect(await layerrMinter.contractAllowedSigner(proxiedLayerr20.target, signer_address)).to.equal(true);
    });
    it("Non-signers should equal false", async function () {
      const { owner, 
        layerrMinter, layerr1155, layerrRenderer, 
        layerr1155Proxy, proxiedLayerr1155, 
        layerr721Proxy, proxiedLayerr721, 
        layerr721AProxy, proxiedLayerr721A, 
        layerr20Proxy, proxiedLayerr20,
        address2, address3, address4, address5, address6 } = await loadFixture(deployLayerr);

      expect(await layerrMinter.contractAllowedSigner(proxiedLayerr1155.target, address2.address)).to.equal(false);
      expect(await layerrMinter.contractAllowedSigner(proxiedLayerr721.target, address2.address)).to.equal(false);
      expect(await layerrMinter.contractAllowedSigner(proxiedLayerr721A.target, address2.address)).to.equal(false);
      expect(await layerrMinter.contractAllowedSigner(proxiedLayerr20.target, address2.address)).to.equal(false);
    });
    it("Token names/symbols should be set right", async function () {
      const { owner, 
        layerrMinter, layerr1155, layerrRenderer, 
        layerr1155Proxy, proxiedLayerr1155, 
        layerr721Proxy, proxiedLayerr721, 
        layerr721AProxy, proxiedLayerr721A, 
        layerr20Proxy, proxiedLayerr20,
        address2, address3, address4, address5, address6 } = await loadFixture(deployLayerr);

      expect(await proxiedLayerr1155.name()).to.equal("MyLayerr1155");
      expect(await proxiedLayerr1155.symbol()).to.equal("ML1155");
      expect(await proxiedLayerr721.name()).to.equal("MyLayerr721");
      expect(await proxiedLayerr721.symbol()).to.equal("ML721");
      expect(await proxiedLayerr721A.name()).to.equal("MyLayerr721A");
      expect(await proxiedLayerr721A.symbol()).to.equal("ML721A");
      expect(await proxiedLayerr20.name()).to.equal("MyLayerr20");
      expect(await proxiedLayerr20.symbol()).to.equal("ML20");
    });
    it("Non-owner shouldn't be able to call owner functions", async function () {
      const { owner, 
        layerrMinter, layerr1155, layerrRenderer, 
        layerr1155Proxy, proxiedLayerr1155, 
        layerr721Proxy, proxiedLayerr721, 
        layerr721AProxy, proxiedLayerr721A, 
        layerr20Proxy, proxiedLayerr20,
        address2, address3, address4, address5, address6 } = await loadFixture(deployLayerr);
      
      let proxiedLayerr1155_2 = new hre.ethers.Contract(proxiedLayerr1155.target, proxiedLayerr1155.interface, address2);
      await expect(proxiedLayerr1155.setRenderer(layerrRenderer.target)).to.not.be.reverted;
      await expect(proxiedLayerr1155_2.setRenderer(layerrRenderer.target)).to.be.reverted;
      await expect(proxiedLayerr1155.setMintExtension(layerrMinter.target, true)).to.not.be.reverted;
      await expect(proxiedLayerr1155_2.setMintExtension(layerrMinter.target, true)).to.be.reverted;
      await expect(proxiedLayerr1155.setContractAllowedSigner(layerrMinter.target, oracle_signer, true)).to.not.be.reverted;
      await expect(proxiedLayerr1155_2.setContractAllowedSigner(layerrMinter.target, oracle_signer, true)).to.be.reverted;
    });
    it("Mint Functions", async function () {
      const { owner, 
        layerrMinter, layerr1155, layerrRenderer, 
        layerr1155Proxy, proxiedLayerr1155, 
        layerr721Proxy, proxiedLayerr721, 
        layerr721AProxy, proxiedLayerr721A, 
        layerr20Proxy, proxiedLayerr20,
        address2, address3, address4, address5, address6,
        layerrInterfaceInspect, delegateCash } = await loadFixture(deployLayerr);
        
      let layerrMinter2 = new hre.ethers.Contract(layerrMinter.target, layerrMinter.interface, address2);
      let layerrMinter3 = new hre.ethers.Contract(layerrMinter.target, layerrMinter.interface, address3);
      let layerrMinter5 = new hre.ethers.Contract(layerrMinter.target, layerrMinter.interface, address5);
      let proxiedLayerr1155_2 = new hre.ethers.Contract(proxiedLayerr1155.target, proxiedLayerr1155.interface, address2);
      let delegateCash_2 = new hre.ethers.Contract(delegateCash.target, delegateCash.interface, address2);

      //ERC721

      //InsufficientPayment
      await expect(layerrMinter.mint([[[["0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",true,2,0,1,0,0]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],1,"0x0ed39f05fbe22e0afcdaa9d695395d9fa38b46cb5bc21835e1b3d7117625b42a7f4edf86126c41dcc8a18ae0ba4c895505c1c795d515f4191b8770153eaaebaf1b","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000100000")})).to.be.revertedWithCustomError(layerrMinter, "InsufficientPayment");
      //NotAllowedSigner
      await expect(layerrMinter.mint([[[["0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",true,2,0,1,0,0]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],1,"0x0ed39f05fbe22e0afcdaa9d695395d9fa38b46cb5bc21835e1b3d7117625b42a7f4edf86126c41dcc8a18ae0ba4c895505c1c795d515f4191c8770153eaaebaf1b","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000200000")})).to.be.revertedWithCustomError(layerrMinter, "NotAllowedSigner");

      await layerrMinter.mint([[[["0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",true,2,0,1,0,0]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],1,"0x0ed39f05fbe22e0afcdaa9d695395d9fa38b46cb5bc21835e1b3d7117625b42a7f4edf86126c41dcc8a18ae0ba4c895505c1c795d515f4191b8770153eaaebaf1b","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000200000")});
      expect(await proxiedLayerr721.balanceOf(owner.address)).to.equal(1);
      expect(await proxiedLayerr721.ownerOf(0)).to.equal(owner.address);


      await layerrMinter2.mint([[[["0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",true,2,1,1,0,0]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],1,"0xc4a00abfaaf08fc635f3fe9fa42e932d9bc7c8adec1754a9e47852d50afaf1ab72ac5111a6f7728b8607eff9358bbe4107fa79293dcee32fc04309215ede39731b","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000200000")});
      expect(await proxiedLayerr721.balanceOf(address2.address)).to.equal(1);
      expect(await proxiedLayerr721.ownerOf(1)).to.equal(address2.address);

      
      //ERC721A
      //Allowlist mint
      await layerrMinter.mint([[[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",false,2,0,1,100,1]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x7af9632618071a13d0e29303fe0639b5ebc050a0088406d9330e6790c5012e08",0,false],1,"0x36abb083d86c56910005689d6e34f3e32ec58fe1fd7540db32eadc269d094f04671da04fc8f6b13e570a01e4eff4899e7a12589c611dad02df4b02a2127b8e801c","0x00",["0xe96bd494eab8f3432b9292d1c247cb6c6a7820df810fbc8421b089fb74741ccd","0x47e61b0dd2d29a007ff31525df2dddf90bb8212ea5e245fe884c9ef8692927a5","0xdc1fd37824e674a202b72e985ace2977b6bfbb1e538daa8b327df9f6296239ff","0xd85e763487fafb493d0561a88d353f4512ff775abd12c8de2d7ec5dd8ab5b265","0x877d0b3daa6d0fa3940cb80c3b20ab31232daf9b1015562acd8e1660f61ca579","0xf489f4e10c498d3db9416e71cdb51520b29bb6d9fee46a19fd62c945adf8a9eb","0xccc10374e72239922c91568426225de23110245c9a590f92847b4c2f2c0a8471","0x7d57b0bcf499a41537cf5d60ac2c0446ecaae4219770b2749ea863eb0f8b0a59","0x40507785ecb965ad167eabb93b42eca6b9182d31b217199269551e54acff1746","0x7fbc35587c1aa0859f23c7d84c9bbc324de67ea4bc7d08adc756f7de92de473d","0x629756ae4dd1b1b03636d3efdd8b2d1e75bb75267f22e586d20783d90c560826","0x99535e19ebab9cb9d7dc9f03063bc82e6ecd28680c3c9c2dfd6b531d7e58aca5","0xe4cc2d08ff84068dea710de9e828e4b1ced182a46210d1fc861800cb81c71125"],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000200000")});
      //MintExceedsMaxPerWallet
      await expect(layerrMinter.mint([[[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",false,2,0,1,100,1]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x7af9632618071a13d0e29303fe0639b5ebc050a0088406d9330e6790c5012e08",0,false],1,"0x36abb083d86c56910005689d6e34f3e32ec58fe1fd7540db32eadc269d094f04671da04fc8f6b13e570a01e4eff4899e7a12589c611dad02df4b02a2127b8e801c","0x00",["0xe96bd494eab8f3432b9292d1c247cb6c6a7820df810fbc8421b089fb74741ccd","0x47e61b0dd2d29a007ff31525df2dddf90bb8212ea5e245fe884c9ef8692927a5","0xdc1fd37824e674a202b72e985ace2977b6bfbb1e538daa8b327df9f6296239ff","0xd85e763487fafb493d0561a88d353f4512ff775abd12c8de2d7ec5dd8ab5b265","0x877d0b3daa6d0fa3940cb80c3b20ab31232daf9b1015562acd8e1660f61ca579","0xf489f4e10c498d3db9416e71cdb51520b29bb6d9fee46a19fd62c945adf8a9eb","0xccc10374e72239922c91568426225de23110245c9a590f92847b4c2f2c0a8471","0x7d57b0bcf499a41537cf5d60ac2c0446ecaae4219770b2749ea863eb0f8b0a59","0x40507785ecb965ad167eabb93b42eca6b9182d31b217199269551e54acff1746","0x7fbc35587c1aa0859f23c7d84c9bbc324de67ea4bc7d08adc756f7de92de473d","0x629756ae4dd1b1b03636d3efdd8b2d1e75bb75267f22e586d20783d90c560826","0x99535e19ebab9cb9d7dc9f03063bc82e6ecd28680c3c9c2dfd6b531d7e58aca5","0xe4cc2d08ff84068dea710de9e828e4b1ced182a46210d1fc861800cb81c71125"],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000200000")})).to.be.revertedWithCustomError(layerrMinter, "MintExceedsMaxPerWallet");
      expect(await proxiedLayerr721A.balanceOf(owner.address)).to.equal(1);
      expect(await proxiedLayerr721A.ownerOf(0)).to.equal(owner.address);
      
      //Allowlist mint using delegate.cash
      await expect(layerrMinter5.mint([[[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",false,2,0,1,100,1]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x7af9632618071a13d0e29303fe0639b5ebc050a0088406d9330e6790c5012e08",0,false],1,"0x36abb083d86c56910005689d6e34f3e32ec58fe1fd7540db32eadc269d094f04671da04fc8f6b13e570a01e4eff4899e7a12589c611dad02df4b02a2127b8e801c","0x00",["0x0039d8715601ecfc758fa1b5d024764cab36aec36853668f84d99d8fb567eb82","0x1cdd8450273dfffb41b58fa3eeaff5eeee3838d5ba692130113b747a47888513","0x4abffc9dc4d4d2f8ce8b13977ea1a5379b4edce9dc6b44285bad96b67fbc780a","0xd85f72f853d11c771fe8ba267c742d8e9e7f1c549c194df3a7bdd081dbc315b2","0x1d488dc6b938006f609738221065269e444b46c1aa5e174604c5a3290dfa33f0","0x46b19170c3dd5ec82befaa1e2bafa7f8ada1653cf2e906cbd240212722a2f715","0x5e4ce910785c8dd52a4798ba988dd3ea338005877bff019818b8ef86524e0390","0x7d75828022c17f541c649fdff605588eb4c279e2fe214163686f1256f4dbba49","0x94b90a18118f20a441cb20d18178afe50aa32ba5768ad761768564a89a13da66","0x059ef41635f9f575961378550d0cf96f1e9f181ecb5c9bb087b15c475b65eb1d","0x596c630e202ccd26c48f062b2d4bf7ab3d614ec81ce1f8c46efcde97824cb926","0xb0b315be5fea95b5005b4494fda794d67d80533d9e21c8202090594538514a5d","0x548cfefc127c5bbf0255aa8d953142072a6821d22e8ed94e8edea8f5f585b0bd"],[], "0x0000000000000000000000000000000000000000", address2.address], {value: ethers.parseEther("0.000000000000200000")})).to.be.revertedWithCustomError(layerrMinter, "InvalidMerkleProof");
      await delegateCash_2.delegateForAll(address5.address, true);

      await expect(layerrMinter5.mint([[[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",false,2,0,1,100,1]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x7af9632618071a13d0e29303fe0639b5ebc050a0088406d9330e6790c5012e08",0,false],1,"0x36abb083d86c56910005689d6e34f3e32ec58fe1fd7540db32eadc269d094f04671da04fc8f6b13e570a01e4eff4899e7a12589c611dad02df4b02a2127b8e801c","0x00",["0x0039d8715601ecfc758fa1b5d024764cab36aec36853668f84d99d8fb567eb82","0x1cdd8450273dfffb41b58fa3eeaff5eeee3838d5ba692130113b747a47888513","0x4abffc9dc4d4d2f8ce8b13977ea1a5379b4edce9dc6b44285bad96b67fbc780a","0xd85f72f853d11c771fe8ba267c742d8e9e7f1c549c194df3a7bdd081dbc315b2","0x1d488dc6b938006f609738221065269e444b46c1aa5e174604c5a3290dfa33f0","0x46b19170c3dd5ec82befaa1e2bafa7f8ada1653cf2e906cbd240212722a2f715","0x5e4ce910785c8dd52a4798ba988dd3ea338005877bff019818b8ef86524e0390","0x7d75828022c17f541c649fdff605588eb4c279e2fe214163686f1256f4dbba49","0x94b90a18118f20a441cb20d18178afe50aa32ba5768ad761768564a89a13da66","0x059ef41635f9f575961378550d0cf96f1e9f181ecb5c9bb087b15c475b65eb1d","0x596c630e202ccd26c48f062b2d4bf7ab3d614ec81ce1f8c46efcde97824cb926","0xb0b315be5fea95b5005b4494fda794d67d80533d9e21c8202090594538514a5d","0x548cfefc127c5bbf0255aa8d953142072a6821d22e8ed94e8edea8f5f585b0bd"],[], "0x0000000000000000000000000000000000000000", address2.address], {value: ethers.parseEther("0.000000000000200000")})).to.not.be.reverted;
      expect(await proxiedLayerr721A.balanceOf(address5.address)).to.equal(1);
      expect(await proxiedLayerr721A.ownerOf(1)).to.equal(address5.address);

      await layerrMinter3.mint([[[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",false,2,0,1,100,3]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],1,"0xf0efbd89034cc675e07fa33b29395bb5adbc5a0c6acf20e55a182f4a5f4521385d5f5fc3ef5d451a77c92983955ad8a6573c64251a9db0d2a10403eb53a14cdf1c","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000200000")});
      expect(await proxiedLayerr721A.balanceOf(address3.address)).to.equal(1);
      expect(await proxiedLayerr721A.ownerOf(2)).to.equal(address3.address);
      await layerrMinter3.mint([[[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",false,2,0,1,100,3]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],2,"0xf0efbd89034cc675e07fa33b29395bb5adbc5a0c6acf20e55a182f4a5f4521385d5f5fc3ef5d451a77c92983955ad8a6573c64251a9db0d2a10403eb53a14cdf1c","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000400000")});
      expect(await proxiedLayerr721A.balanceOf(address3.address)).to.equal(3);
      expect(await proxiedLayerr721A.ownerOf(3)).to.equal(address3.address);
      expect(await proxiedLayerr721A.ownerOf(4)).to.equal(address3.address);
      //MintExceedsMaxPerWallet
      await expect(layerrMinter3.mint([[[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",false,2,0,1,100,3]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],1,"0xf0efbd89034cc675e07fa33b29395bb5adbc5a0c6acf20e55a182f4a5f4521385d5f5fc3ef5d451a77c92983955ad8a6573c64251a9db0d2a10403eb53a14cdf1c","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000200000")})).to.be.revertedWithCustomError(layerrMinter, "MintExceedsMaxPerWallet");

      
      let proxiedLayerr721A_3 = new hre.ethers.Contract(proxiedLayerr721A.target, proxiedLayerr721A.interface, address3);
      //expect revert if approval not set
      await expect(layerrMinter3.mint([[[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",false,2,0,5,0,0]],[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",false,2,0,0,1]],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],2,"0x8ed4625f8d96263ed0dbe96cbbcc8e4cb82bd933782632b346a906537099657937fe372a1f561498a9b2da2570b54dac7897798114d767650b61bd9fdb015ece1c","0x00",[],[3,4], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000400000")})).to.be.reverted;
      await proxiedLayerr721A_3.setApprovalForAll(layerrMinter.target, true);
      //expect revert, tokens owned by different address
      await expect(layerrMinter3.mint([[[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",false,2,0,5,0,0]],[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",false,2,0,0,1]],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],2,"0x8ed4625f8d96263ed0dbe96cbbcc8e4cb82bd933782632b346a906537099657937fe372a1f561498a9b2da2570b54dac7897798114d767650b61bd9fdb015ece1c","0x00",[],[0,1], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000400000")})).to.be.reverted;
      await layerrMinter3.mint([[[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",false,2,0,5,0,0]],[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",false,2,0,0,1]],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],2,"0x8ed4625f8d96263ed0dbe96cbbcc8e4cb82bd933782632b346a906537099657937fe372a1f561498a9b2da2570b54dac7897798114d767650b61bd9fdb015ece1c","0x00",[],[3,4], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000400000")});
      expect(await proxiedLayerr721A.balanceOf(address3.address)).to.equal(11);
      expect(await proxiedLayerr721A.totalSupply()).to.equal(13); //owner 1, address2 1, address3 11 (1 minted, 2 minted, 2 burned, 10 minted)

      //mint ERC721A + ERC20
      await layerrMinter.mint([[[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",false,2,0,1,0,0],["0x8A791620dd6260079BF849Dc5567aDC3F2FdC318",false,1,0,5000,0,0]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],2,"0x7a4c09bca3f6647da85af2ce639f95375cd096efbc4b328915843bf10a11dacb2019bd13ae4f393959cd4a7cf43867ccb3593701b61782a958a683708830028d1b","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000400000")});
      expect(await proxiedLayerr721A.balanceOf(owner.address)).to.equal(3);
      expect(await proxiedLayerr20.balanceOf(owner.address)).to.equal(10000);
      await layerrMinter2.mint([[[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",false,2,0,1,0,0],["0x8A791620dd6260079BF849Dc5567aDC3F2FdC318",false,1,0,5000,0,0]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],2,"0x7a4c09bca3f6647da85af2ce639f95375cd096efbc4b328915843bf10a11dacb2019bd13ae4f393959cd4a7cf43867ccb3593701b61782a958a683708830028d1b","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000400000")});
      expect(await proxiedLayerr721A.balanceOf(address2.address)).to.equal(2);
      expect(await proxiedLayerr20.balanceOf(address2.address)).to.equal(10000);
      await layerrMinter2.mint([[[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",false,2,0,1,0,0],["0x8A791620dd6260079BF849Dc5567aDC3F2FdC318",false,1,0,5000,0,0]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],2,"0x7a4c09bca3f6647da85af2ce639f95375cd096efbc4b328915843bf10a11dacb2019bd13ae4f393959cd4a7cf43867ccb3593701b61782a958a683708830028d1b","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000400000")});
      expect(await proxiedLayerr721A.balanceOf(address2.address)).to.equal(4);
      expect(await proxiedLayerr20.balanceOf(address2.address)).to.equal(20000);

      //mint ERC721A w/ ERC20 as payment
      let proxiedLayerr20_2 = new hre.ethers.Contract(proxiedLayerr20.target, proxiedLayerr20.interface, address2);
      await expect(layerrMinter2.mint([[[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",false,2,0,1,0,0]],[],[["0x8A791620dd6260079BF849Dc5567aDC3F2FdC318",1,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",10000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],1,"0x5af15f0918c7cc7a9de9d8d6dc8fb5474ccc425b718a9a6410805ab1cf3442260e27edbbc011a935d573864c7084264f30c6002b4f5303a3e78a567d6a63856a1c","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000100000")})).to.be.reverted;
      await proxiedLayerr20_2.approve(layerrMinter.target, 10000);
      await layerrMinter2.mint([[[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",false,2,0,1,0,0]],[],[["0x8A791620dd6260079BF849Dc5567aDC3F2FdC318",1,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",10000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],1,"0x5af15f0918c7cc7a9de9d8d6dc8fb5474ccc425b718a9a6410805ab1cf3442260e27edbbc011a935d573864c7084264f30c6002b4f5303a3e78a567d6a63856a1c","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000100000")});
      expect(await proxiedLayerr721A.balanceOf(address2.address)).to.equal(5);
      expect(await proxiedLayerr20.balanceOf(address2.address)).to.equal(10000);
      expect(await proxiedLayerr20.balanceOf("0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2")).to.equal(10000);
      
      //ERC1155
      //Mint 6 tokens
      await layerrMinter.mint([[[["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,0,1,100,0],["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,1,1,100,0],["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,2,1,100,0],["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,3,1,100,0],["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,4,1,100,0],["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,5,1,100,0]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],1,"0x7f166d17be4a6414465d841493a9d7db6f4a76c69d1794853d340f2efd3f09f603bd58317193c1a514db47376f1bc431964a505e244ce95eeb6d7ae230f9ac5b1c","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000200000")});
      expect(await proxiedLayerr1155.balanceOf(owner.address, 0)).to.equal(1);
      expect(await proxiedLayerr1155.balanceOf(owner.address, 1)).to.equal(1);
      expect(await proxiedLayerr1155.balanceOf(owner.address, 2)).to.equal(1);
      expect(await proxiedLayerr1155.balanceOf(owner.address, 3)).to.equal(1);
      expect(await proxiedLayerr1155.balanceOf(owner.address, 4)).to.equal(1);
      expect(await proxiedLayerr1155.balanceOf(owner.address, 5)).to.equal(1);
      expect(await proxiedLayerr1155.balanceOf(owner.address, 6)).to.equal(0);
      await layerrMinter2.mint([[[["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,0,1,100,0],["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,1,1,100,0],["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,2,1,100,0],["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,3,1,100,0],["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,4,1,100,0],["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,5,1,100,0]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],1,"0x7f166d17be4a6414465d841493a9d7db6f4a76c69d1794853d340f2efd3f09f603bd58317193c1a514db47376f1bc431964a505e244ce95eeb6d7ae230f9ac5b1c","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000200000")});
      expect(await proxiedLayerr1155.balanceOf(address2.address, 0)).to.equal(1);
      expect(await proxiedLayerr1155.balanceOf(address2.address, 1)).to.equal(1);
      expect(await proxiedLayerr1155.balanceOf(address2.address, 2)).to.equal(1);
      expect(await proxiedLayerr1155.balanceOf(address2.address, 3)).to.equal(1);
      expect(await proxiedLayerr1155.balanceOf(address2.address, 4)).to.equal(1);
      expect(await proxiedLayerr1155.balanceOf(address2.address, 5)).to.equal(1);
      expect(await proxiedLayerr1155.balanceOf(address2.address, 6)).to.equal(0);

      //Revert without approval
      await expect(layerrMinter.mint([[[["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,6,1,100,0]],[["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,0,0,1],["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,0,1,1],["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,0,2,1],["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,0,3,1],["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,0,4,1],["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,0,5,1]],[["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],1,"0xa84986d502e8b90bea77c6c7a42e0b5f9d696465cbd1a021c7b9935f274cd6a97eb14361a6a8913dc6922f3bbca9fe0db904ab129e0323473548aec82fef3d1b1c","0x00",[],[0,1,2,3,4,5], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000100000")})).to.be.reverted;
      await proxiedLayerr1155.setApprovalForAll(layerrMinter.target, true);
      //Burn 6 tokens to mint 1
      await layerrMinter.mint([[[["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,6,1,100,0]],[["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,0,0,1],["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,0,1,1],["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,0,2,1],["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,0,3,1],["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,0,4,1],["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,0,5,1]],[["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],1,"0xa84986d502e8b90bea77c6c7a42e0b5f9d696465cbd1a021c7b9935f274cd6a97eb14361a6a8913dc6922f3bbca9fe0db904ab129e0323473548aec82fef3d1b1c","0x00",[],[0,1,2,3,4,5], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000100000")});
      expect(await proxiedLayerr1155.balanceOf(owner.address, 0)).to.equal(0);
      expect(await proxiedLayerr1155.balanceOf(owner.address, 1)).to.equal(0);
      expect(await proxiedLayerr1155.balanceOf(owner.address, 2)).to.equal(0);
      expect(await proxiedLayerr1155.balanceOf(owner.address, 3)).to.equal(0);
      expect(await proxiedLayerr1155.balanceOf(owner.address, 4)).to.equal(0);
      expect(await proxiedLayerr1155.balanceOf(owner.address, 5)).to.equal(0);
      expect(await proxiedLayerr1155.balanceOf(owner.address, 6)).to.equal(1);

      await expect(layerrMinter2.mint([[[["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,6,1,100,0]],[["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,0,0,1],["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,0,1,1],["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,0,2,1],["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,0,3,1],["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,0,4,1],["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,0,5,1]],[["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],1,"0xa84986d502e8b90bea77c6c7a42e0b5f9d696465cbd1a021c7b9935f274cd6a97eb14361a6a8913dc6922f3bbca9fe0db904ab129e0323473548aec82fef3d1b1c","0x00",[],[0,1,2,3,4,5], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000100000")})).to.be.reverted;
      await proxiedLayerr1155_2.setApprovalForAll(layerrMinter.target, true);
      await layerrMinter2.mint([[[["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,6,1,100,0]],[["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,0,0,1],["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,0,1,1],["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,0,2,1],["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,0,3,1],["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,0,4,1],["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,0,5,1]],[["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],1,"0xa84986d502e8b90bea77c6c7a42e0b5f9d696465cbd1a021c7b9935f274cd6a97eb14361a6a8913dc6922f3bbca9fe0db904ab129e0323473548aec82fef3d1b1c","0x00",[],[0,1,2,3,4,5], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000100000")});
      expect(await proxiedLayerr1155.balanceOf(address2.address, 0)).to.equal(0);
      expect(await proxiedLayerr1155.balanceOf(address2.address, 1)).to.equal(0);
      expect(await proxiedLayerr1155.balanceOf(address2.address, 2)).to.equal(0);
      expect(await proxiedLayerr1155.balanceOf(address2.address, 3)).to.equal(0);
      expect(await proxiedLayerr1155.balanceOf(address2.address, 4)).to.equal(0);
      expect(await proxiedLayerr1155.balanceOf(address2.address, 5)).to.equal(0);
      expect(await proxiedLayerr1155.balanceOf(address2.address, 6)).to.equal(1);

      await layerrMinter.mint([[[["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,16,1,0,3]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],3,"0x718111cdab4a9356bda9c584c957fc0536f0b1093349e4fbe98f69abdd2658bd7664d8c29f0cff9c9aa0846a785006b9224e1221b1f6f02d20f055d4af337d4d1b","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000600000")});
      expect(await proxiedLayerr1155.balanceOf(owner.address, 16)).to.equal(3);

      await layerrMinter2.mint([[[["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,16,1,0,3]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],1,"0x718111cdab4a9356bda9c584c957fc0536f0b1093349e4fbe98f69abdd2658bd7664d8c29f0cff9c9aa0846a785006b9224e1221b1f6f02d20f055d4af337d4d1b","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000200000")});
      expect(await proxiedLayerr1155.balanceOf(address2.address, 16)).to.equal(1);

      await layerrMinter.mint([[[["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,48,1,100,0]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],3,"0x7cbf375b67006011cdc4cd9c88143543a4c6a880acb8b31e35d4c8f4758a90f4620205a746434efab17491294cd13628430f408b74fe49275608ed258c7398e41b","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000600000")});
      expect(await proxiedLayerr1155.balanceOf(owner.address, 48)).to.equal(3);

      await layerrMinter2.mint([[[["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,48,1,100,0]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],1,"0x7cbf375b67006011cdc4cd9c88143543a4c6a880acb8b31e35d4c8f4758a90f4620205a746434efab17491294cd13628430f408b74fe49275608ed258c7398e41b","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000200000")});
      expect(await proxiedLayerr1155.balanceOf(address2.address, 48)).to.equal(1);

      await layerrMinter2.mintTo(address6.address, [[[["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,48,1,100,0]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],1,"0x7cbf375b67006011cdc4cd9c88143543a4c6a880acb8b31e35d4c8f4758a90f4620205a746434efab17491294cd13628430f408b74fe49275608ed258c7398e41b","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], 1, {value: ethers.parseEther("0.000000000000200000")});
      expect(await proxiedLayerr1155.balanceOf(address2.address, 48)).to.equal(1);
      expect(await proxiedLayerr1155.balanceOf(address6.address, 48)).to.equal(1);

      await layerrMinter.mint([[[["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,64,1,100,0]],[],[["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],3,"0x9ebf832ee5f4d96c5bc1b1cd4ae66f759530953bd75c126d8cf498adae2d6085060ab491974215fdf0cc3b5ac9c84ebd67f3d05cf1586801f4d96548c11aba591b","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000300000")});
      await layerrMinter2.mint([[[["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,64,1,100,0]],[],[["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],1,"0x9ebf832ee5f4d96c5bc1b1cd4ae66f759530953bd75c126d8cf498adae2d6085060ab491974215fdf0cc3b5ac9c84ebd67f3d05cf1586801f4d96548c11aba591b","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000100000")});
      await layerrMinter.mint([[[["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,32,1,0,0]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],3,"0x1fa649b0fc79ce758da5d44e076adb0c543a3d1680bd9abb440c719bd872fcd726ea8383e85b5baf2ef6f6168989c5015ec981e92fe438bd313a238af3ba4c221b","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000600000")});
      await layerrMinter2.mint([[[["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,32,1,0,0]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],1,"0x1fa649b0fc79ce758da5d44e076adb0c543a3d1680bd9abb440c719bd872fcd726ea8383e85b5baf2ef6f6168989c5015ec981e92fe438bd313a238af3ba4c221b","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000200000")});

      await expect(layerrMinter.mint([[[["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,32,1,0,0]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,true],3,"0xd8b7ee4d951c2df4141c6f0d771620d6e9b766b5e6bc1f5322fd9c55b827171c7d036b64f67ee4d7aff8bd723f28d170063e3659a1431535db88b2bd81201c7c1c","0xa51d3dac7b6de19485740af755af71dc9ec3616eea12585fa8f2ee1a12e350d3517b119f41afc51e8fa82adf4b8f129467a2ab32e42ba7435999a66a4dea9f221c",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000600000")})).to.be.revertedWithCustomError(layerrMinter, "InvalidOracleSignature");
      expect(await proxiedLayerr1155.balanceOf(owner.address, 32)).to.equal(3);
      await proxiedLayerr1155.setContractAllowedOracle(layerrMinter.target, oracle_signer, true);
      await layerrMinter.mint([[[["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,32,1,0,0]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,true],3,"0xd8b7ee4d951c2df4141c6f0d771620d6e9b766b5e6bc1f5322fd9c55b827171c7d036b64f67ee4d7aff8bd723f28d170063e3659a1431535db88b2bd81201c7c1c","0xa51d3dac7b6de19485740af755af71dc9ec3616eea12585fa8f2ee1a12e350d3517b119f41afc51e8fa82adf4b8f129467a2ab32e42ba7435999a66a4dea9f221c",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000600000")});
      expect(await proxiedLayerr1155.balanceOf(owner.address, 32)).to.equal(6);
      await expect(layerrMinter2.mint([[[["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,32,1,0,0]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,true],1,"0xd8b7ee4d951c2df4141c6f0d771620d6e9b766b5e6bc1f5322fd9c55b827171c7d036b64f67ee4d7aff8bd723f28d170063e3659a1431535db88b2bd81201c7c1c","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000200000")})).to.be.revertedWithCustomError(layerrMinter, "InvalidOracleSignature");
    });
    it("Should revert for insufficient payment", async function () {
      const { owner, 
        layerrMinter, layerr1155, layerrRenderer, 
        layerr1155Proxy, proxiedLayerr1155, 
        layerr721Proxy, proxiedLayerr721, 
        layerr721AProxy, proxiedLayerr721A, 
        layerr20Proxy, proxiedLayerr20,
        address2, address3, address4, address5, address6 } = await loadFixture(deployLayerr);
        
      //InsufficientPayment, reverted
      await expect(layerrMinter.mint([[[["0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",true,2,0,1,0,0]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],1,"0x0ed39f05fbe22e0afcdaa9d695395d9fa38b46cb5bc21835e1b3d7117625b42a7f4edf86126c41dcc8a18ae0ba4c895505c1c795d515f4191b8770153eaaebaf1b","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000100000")})).to.be.revertedWithCustomError(layerrMinter, "InsufficientPayment");
      //Excess payment, not reverted
      await expect(layerrMinter.mint([[[["0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",true,2,0,1,0,0]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],1,"0x0ed39f05fbe22e0afcdaa9d695395d9fa38b46cb5bc21835e1b3d7117625b42a7f4edf86126c41dcc8a18ae0ba4c895505c1c795d515f4191b8770153eaaebaf1b","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("5.000000000000100000")})).to.not.be.reverted;
    });
    it("Should revert for not allowed signer", async function () {
      const { owner, 
        layerrMinter, layerr1155, layerrRenderer, 
        layerr1155Proxy, proxiedLayerr1155, 
        layerr721Proxy, proxiedLayerr721, 
        layerr721AProxy, proxiedLayerr721A, 
        layerr20Proxy, proxiedLayerr20,
        address2, address3, address4, address5, address6 } = await loadFixture(deployLayerr);
        
      //NotAllowedSigner
      await expect(layerrMinter.mint([[[["0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",true,2,0,1,0,0]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],1,"0x0ed39f05fbe22e0afcdaa9d695395d9fa38b46cb5bc21835e1b3d7117625b42a7f4edf86126c41dcc8a18ae0ba4c895505c1c795d515f4191c8770153eaaebaf1b","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000200000")})).to.be.revertedWithCustomError(layerrMinter, "NotAllowedSigner");
    });
    it("Should revert for invalid nonce", async function () {
      const { owner, 
        layerrMinter, layerr1155, layerrRenderer, 
        layerr1155Proxy, proxiedLayerr1155, 
        layerr721Proxy, proxiedLayerr721, 
        layerr721AProxy, proxiedLayerr721A, 
        layerr20Proxy, proxiedLayerr20,
        address2, address3, address4, address5, address6 } = await loadFixture(deployLayerr);
        
      const impersonatedSigner = await ethers.getImpersonatedSigner(signer_address);
      let layerrMinter2 = new hre.ethers.Contract(layerrMinter.target, layerrMinter.interface, impersonatedSigner);
      await layerrMinter2.incrementSignerNonce();

      //SignerNonceInvalid
      await expect(layerrMinter.mint([[[["0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",true,2,0,1,0,0]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],1,"0x0ed39f05fbe22e0afcdaa9d695395d9fa38b46cb5bc21835e1b3d7117625b42a7f4edf86126c41dcc8a18ae0ba4c895505c1c795d515f4191b8770153eaaebaf1b","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000200000")})).to.be.revertedWithCustomError(layerrMinter, "SignerNonceInvalid");
    });
    it("Should revert for minting same ERC721 token twice", async function () {
      const { owner, 
        layerrMinter, layerr1155, layerrRenderer, 
        layerr1155Proxy, proxiedLayerr1155, 
        layerr721Proxy, proxiedLayerr721, 
        layerr721AProxy, proxiedLayerr721A, 
        layerr20Proxy, proxiedLayerr20,
        address2, address3, address4, address5, address6 } = await loadFixture(deployLayerr);
        
      let layerrMinter2 = new hre.ethers.Contract(layerrMinter.target, layerrMinter.interface, address2);
      await layerrMinter2.incrementSignerNonce();

      await expect(layerrMinter.mint([[[["0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",true,2,0,1,0,0]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],1,"0x0ed39f05fbe22e0afcdaa9d695395d9fa38b46cb5bc21835e1b3d7117625b42a7f4edf86126c41dcc8a18ae0ba4c895505c1c795d515f4191b8770153eaaebaf1b","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000200000")})).to.not.be.reverted;

      await expect(layerrMinter2.mint([[[["0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",true,2,0,1,0,0]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],1,"0x0ed39f05fbe22e0afcdaa9d695395d9fa38b46cb5bc21835e1b3d7117625b42a7f4edf86126c41dcc8a18ae0ba4c895505c1c795d515f4191b8770153eaaebaf1b","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000200000")})).to.be.reverted;
    });
    it("Should revert for invalid signature", async function () {
      const { owner, 
        layerrMinter, layerr1155, layerrRenderer, 
        layerr1155Proxy, proxiedLayerr1155, 
        layerr721Proxy, proxiedLayerr721, 
        layerr721AProxy, proxiedLayerr721A, 
        layerr20Proxy, proxiedLayerr20,
        address2, address3, address4, address5, address6 } = await loadFixture(deployLayerr);

      const mintParameters = [[["0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",true,2,0,1,0,0]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false];
      const mintOrder = [mintParameters,1,"0x0ed39f05fbe22e0afcdaa9d695395d9fa38b46cb5bc21835e1b3d7117625b42a7f4edf86126c41dcc8a18ae0ba4c895505c1c795d515f4191b8770153eaaebaf1b","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"];
        
      await expect(layerrMinter.mint(mintOrder, {value: ethers.parseEther("0.000000000000200000")})).to.not.be.reverted;
      let signatureDigest = await layerrMinter.getMintParametersSignatureDigest(mintParameters)
      await proxiedLayerr721.setSignatureValidity(layerrMinter.target, [signatureDigest], true);

      //SignatureInvalid
      await expect(layerrMinter.mint(mintOrder, {value: ethers.parseEther("0.000000000000200000")})).to.be.revertedWithCustomError(layerrMinter, "SignatureInvalid");
    });
    it("Should revert for cannot mint multiple ERC721 with same id", async function () {
      const { owner, 
        layerrMinter, layerr1155, layerrRenderer, 
        layerr1155Proxy, proxiedLayerr1155, 
        layerr721Proxy, proxiedLayerr721, 
        layerr721AProxy, proxiedLayerr721A, 
        layerr20Proxy, proxiedLayerr20,
        address2, address3, address4, address5, address6 } = await loadFixture(deployLayerr);
        
      await expect(layerrMinter.mint([[[["0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",true,2,0,1,0,0]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],2,"0x0ed39f05fbe22e0afcdaa9d695395d9fa38b46cb5bc21835e1b3d7117625b42a7f4edf86126c41dcc8a18ae0ba4c895505c1c795d515f4191b8770153eaaebaf1b","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000400000")})).to.be.revertedWithCustomError(layerrMinter, "CannotMintMultipleERC721WithSameId");
    });
    it("Should revert for mint exceeds max per wallet", async function () {
      const { owner, 
        layerrMinter, layerr1155, layerrRenderer, 
        layerr1155Proxy, proxiedLayerr1155, 
        layerr721Proxy, proxiedLayerr721, 
        layerr721AProxy, proxiedLayerr721A, 
        layerr20Proxy, proxiedLayerr20,
        address2, address3, address4, address5, address6 } = await loadFixture(deployLayerr);
        
      let layerrMinter3 = new hre.ethers.Contract(layerrMinter.target, layerrMinter.interface, address3);

      await layerrMinter3.mint([[[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",false,2,0,1,100,3]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],1,"0xf0efbd89034cc675e07fa33b29395bb5adbc5a0c6acf20e55a182f4a5f4521385d5f5fc3ef5d451a77c92983955ad8a6573c64251a9db0d2a10403eb53a14cdf1c","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000200000")});
      expect(await proxiedLayerr721A.balanceOf(address3.address)).to.equal(1);
      expect(await proxiedLayerr721A.ownerOf(0)).to.equal(address3.address);
      await layerrMinter3.mint([[[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",false,2,0,1,100,3]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],2,"0xf0efbd89034cc675e07fa33b29395bb5adbc5a0c6acf20e55a182f4a5f4521385d5f5fc3ef5d451a77c92983955ad8a6573c64251a9db0d2a10403eb53a14cdf1c","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000400000")});
      expect(await proxiedLayerr721A.balanceOf(address3.address)).to.equal(3);
      expect(await proxiedLayerr721A.ownerOf(1)).to.equal(address3.address);
      expect(await proxiedLayerr721A.ownerOf(2)).to.equal(address3.address);
      //MintExceedsMaxPerWallet
      await expect(layerrMinter3.mint([[[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",false,2,0,1,100,3]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],1,"0xf0efbd89034cc675e07fa33b29395bb5adbc5a0c6acf20e55a182f4a5f4521385d5f5fc3ef5d451a77c92983955ad8a6573c64251a9db0d2a10403eb53a14cdf1c","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000200000")})).to.be.revertedWithCustomError(layerrMinter, "MintExceedsMaxPerWallet");
    });
    it("Should revert for mint exceeds max supply", async function () {
      const { owner, 
        layerrMinter, layerr1155, layerrRenderer, 
        layerr1155Proxy, proxiedLayerr1155, 
        layerr721Proxy, proxiedLayerr721, 
        layerr721AProxy, proxiedLayerr721A, 
        layerr20Proxy, proxiedLayerr20,
        address2, address3, address4, address5, address6 } = await loadFixture(deployLayerr);
        
      let layerrMinter2 = new hre.ethers.Contract(layerrMinter.target, layerrMinter.interface, address2);
      let layerrMinter3 = new hre.ethers.Contract(layerrMinter.target, layerrMinter.interface, address3);

      await layerrMinter.mint([[[["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,48,1,100,0]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],50,"0x7cbf375b67006011cdc4cd9c88143543a4c6a880acb8b31e35d4c8f4758a90f4620205a746434efab17491294cd13628430f408b74fe49275608ed258c7398e41b","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000010000000")});
      await layerrMinter2.mint([[[["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,48,1,100,0]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],50,"0x7cbf375b67006011cdc4cd9c88143543a4c6a880acb8b31e35d4c8f4758a90f4620205a746434efab17491294cd13628430f408b74fe49275608ed258c7398e41b","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000010000000")});
      await expect(layerrMinter3.mint([[[["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,48,1,100,0]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],3,"0x7cbf375b67006011cdc4cd9c88143543a4c6a880acb8b31e35d4c8f4758a90f4620205a746434efab17491294cd13628430f408b74fe49275608ed258c7398e41b","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000600000")})).to.be.revertedWithCustomError(layerrMinter, "MintExceedsMaxSupply");
    });
    it("Should revert for mint exceeds max signature usage", async function () {
      const { owner, 
        layerrMinter, layerr1155, layerrRenderer, 
        layerr1155Proxy, proxiedLayerr1155, 
        layerr721Proxy, proxiedLayerr721, 
        layerr721AProxy, proxiedLayerr721A, 
        layerr20Proxy, proxiedLayerr20,
        address2, address3, address4, address5, address6 } = await loadFixture(deployLayerr);
        
      let layerrMinter2 = new hre.ethers.Contract(layerrMinter.target, layerrMinter.interface, address2);
      let layerrMinter3 = new hre.ethers.Contract(layerrMinter.target, layerrMinter.interface, address3);

      //ERC721A
      //Allowlist mint
      await layerrMinter.mint([[[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",false,2,0,1,100,1]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x7af9632618071a13d0e29303fe0639b5ebc050a0088406d9330e6790c5012e08",0,false],1,"0x36abb083d86c56910005689d6e34f3e32ec58fe1fd7540db32eadc269d094f04671da04fc8f6b13e570a01e4eff4899e7a12589c611dad02df4b02a2127b8e801c","0x00",["0xe96bd494eab8f3432b9292d1c247cb6c6a7820df810fbc8421b089fb74741ccd","0x47e61b0dd2d29a007ff31525df2dddf90bb8212ea5e245fe884c9ef8692927a5","0xdc1fd37824e674a202b72e985ace2977b6bfbb1e538daa8b327df9f6296239ff","0xd85e763487fafb493d0561a88d353f4512ff775abd12c8de2d7ec5dd8ab5b265","0x877d0b3daa6d0fa3940cb80c3b20ab31232daf9b1015562acd8e1660f61ca579","0xf489f4e10c498d3db9416e71cdb51520b29bb6d9fee46a19fd62c945adf8a9eb","0xccc10374e72239922c91568426225de23110245c9a590f92847b4c2f2c0a8471","0x7d57b0bcf499a41537cf5d60ac2c0446ecaae4219770b2749ea863eb0f8b0a59","0x40507785ecb965ad167eabb93b42eca6b9182d31b217199269551e54acff1746","0x7fbc35587c1aa0859f23c7d84c9bbc324de67ea4bc7d08adc756f7de92de473d","0x629756ae4dd1b1b03636d3efdd8b2d1e75bb75267f22e586d20783d90c560826","0x99535e19ebab9cb9d7dc9f03063bc82e6ecd28680c3c9c2dfd6b531d7e58aca5","0xe4cc2d08ff84068dea710de9e828e4b1ced182a46210d1fc861800cb81c71125"],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000200000")});      
      await layerrMinter2.mint([[[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",false,2,0,1,100,1]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x7af9632618071a13d0e29303fe0639b5ebc050a0088406d9330e6790c5012e08",0,false],1,"0x36abb083d86c56910005689d6e34f3e32ec58fe1fd7540db32eadc269d094f04671da04fc8f6b13e570a01e4eff4899e7a12589c611dad02df4b02a2127b8e801c","0x00",["0x0039d8715601ecfc758fa1b5d024764cab36aec36853668f84d99d8fb567eb82","0x1cdd8450273dfffb41b58fa3eeaff5eeee3838d5ba692130113b747a47888513","0x4abffc9dc4d4d2f8ce8b13977ea1a5379b4edce9dc6b44285bad96b67fbc780a","0xd85f72f853d11c771fe8ba267c742d8e9e7f1c549c194df3a7bdd081dbc315b2","0x1d488dc6b938006f609738221065269e444b46c1aa5e174604c5a3290dfa33f0","0x46b19170c3dd5ec82befaa1e2bafa7f8ada1653cf2e906cbd240212722a2f715","0x5e4ce910785c8dd52a4798ba988dd3ea338005877bff019818b8ef86524e0390","0x7d75828022c17f541c649fdff605588eb4c279e2fe214163686f1256f4dbba49","0x94b90a18118f20a441cb20d18178afe50aa32ba5768ad761768564a89a13da66","0x059ef41635f9f575961378550d0cf96f1e9f181ecb5c9bb087b15c475b65eb1d","0x596c630e202ccd26c48f062b2d4bf7ab3d614ec81ce1f8c46efcde97824cb926","0xb0b315be5fea95b5005b4494fda794d67d80533d9e21c8202090594538514a5d","0x548cfefc127c5bbf0255aa8d953142072a6821d22e8ed94e8edea8f5f585b0bd"],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000200000")});
      await expect(layerrMinter2.mint([[[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",false,2,0,1,100,1]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x7af9632618071a13d0e29303fe0639b5ebc050a0088406d9330e6790c5012e08",0,false],1,"0x36abb083d86c56910005689d6e34f3e32ec58fe1fd7540db32eadc269d094f04671da04fc8f6b13e570a01e4eff4899e7a12589c611dad02df4b02a2127b8e801c","0x00",["0x0039d8715601ecfc758fa1b5d024764cab36aec36853668f84d99d8fb567eb82","0x1cdd8450273dfffb41b58fa3eeaff5eeee3838d5ba692130113b747a47888513","0x4abffc9dc4d4d2f8ce8b13977ea1a5379b4edce9dc6b44285bad96b67fbc780a","0xd85f72f853d11c771fe8ba267c742d8e9e7f1c549c194df3a7bdd081dbc315b2","0x1d488dc6b938006f609738221065269e444b46c1aa5e174604c5a3290dfa33f0","0x46b19170c3dd5ec82befaa1e2bafa7f8ada1653cf2e906cbd240212722a2f715","0x5e4ce910785c8dd52a4798ba988dd3ea338005877bff019818b8ef86524e0390","0x7d75828022c17f541c649fdff605588eb4c279e2fe214163686f1256f4dbba49","0x94b90a18118f20a441cb20d18178afe50aa32ba5768ad761768564a89a13da66","0x059ef41635f9f575961378550d0cf96f1e9f181ecb5c9bb087b15c475b65eb1d","0x596c630e202ccd26c48f062b2d4bf7ab3d614ec81ce1f8c46efcde97824cb926","0xb0b315be5fea95b5005b4494fda794d67d80533d9e21c8202090594538514a5d","0x548cfefc127c5bbf0255aa8d953142072a6821d22e8ed94e8edea8f5f585b0bd"],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000100000")})).to.be.revertedWithCustomError(layerrMinter, "InsufficientPayment");

      await layerrMinter3.mint([[[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",false,2,0,1,100,3]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],1,"0xf0efbd89034cc675e07fa33b29395bb5adbc5a0c6acf20e55a182f4a5f4521385d5f5fc3ef5d451a77c92983955ad8a6573c64251a9db0d2a10403eb53a14cdf1c","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000200000")});
      await layerrMinter3.mint([[[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",false,2,0,1,100,3]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],2,"0xf0efbd89034cc675e07fa33b29395bb5adbc5a0c6acf20e55a182f4a5f4521385d5f5fc3ef5d451a77c92983955ad8a6573c64251a9db0d2a10403eb53a14cdf1c","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000400000")});
      
      let proxiedLayerr721A_3 = new hre.ethers.Contract(proxiedLayerr721A.target, proxiedLayerr721A.interface, address3);
      await proxiedLayerr721A_3.setApprovalForAll(layerrMinter.target, true);
      await layerrMinter3.mint([[[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",false,2,0,5,0,0]],[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",false,2,0,0,1]],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,2,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],2,"0xc1cd2b7fb321fcaf706aad04cbcc1d92ee390e58435878460a96491aa0d1e0bc75cdbbb00c33b3deb174158f16d7195da2241e955719f1803dc10033126c7b5e1c","0x00",[],[3,4], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000400000")});
      await proxiedLayerr721A.setApprovalForAll(layerrMinter.target, true);
      await expect(layerrMinter.mint([[[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",false,2,0,5,0,0]],[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",false,2,0,0,1]],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,2,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],2,"0xc1cd2b7fb321fcaf706aad04cbcc1d92ee390e58435878460a96491aa0d1e0bc75cdbbb00c33b3deb174158f16d7195da2241e955719f1803dc10033126c7b5e1c","0x00",[],[0], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000200000")})).to.be.revertedWithCustomError(layerrMinter, "ExceedsMaxSignatureUsage");
    });
    it("Should revert for invalid payment token type", async function () {
      const { owner, 
        layerrMinter, layerr1155, layerrRenderer, 
        layerr1155Proxy, proxiedLayerr1155, 
        layerr721Proxy, proxiedLayerr721, 
        layerr721AProxy, proxiedLayerr721A, 
        layerr20Proxy, proxiedLayerr20,
        address2, address3, address4, address5, address6 } = await loadFixture(deployLayerr);
        
      let layerrMinter2 = new hre.ethers.Contract(layerrMinter.target, layerrMinter.interface, address2);
      let layerrMinter3 = new hre.ethers.Contract(layerrMinter.target, layerrMinter.interface, address3);

      //ERC721A
      //Allowlist mint
      await expect(layerrMinter.mint([[[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",false,2,0,1,100,1]],[],[["0x0000000000000000000000000000000000000000",2,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x7af9632618071a13d0e29303fe0639b5ebc050a0088406d9330e6790c5012e08",0,false],1,"0x36abb083d86c56910005689d6e34f3e32ec58fe1fd7540db32eadc269d094f04671da04fc8f6b13e570a01e4eff4899e7a12589c611dad02df4b02a2127b8e801c","0x00",["0xe96bd494eab8f3432b9292d1c247cb6c6a7820df810fbc8421b089fb74741ccd","0x47e61b0dd2d29a007ff31525df2dddf90bb8212ea5e245fe884c9ef8692927a5","0xdc1fd37824e674a202b72e985ace2977b6bfbb1e538daa8b327df9f6296239ff","0xd85e763487fafb493d0561a88d353f4512ff775abd12c8de2d7ec5dd8ab5b265","0x877d0b3daa6d0fa3940cb80c3b20ab31232daf9b1015562acd8e1660f61ca579","0xf489f4e10c498d3db9416e71cdb51520b29bb6d9fee46a19fd62c945adf8a9eb","0xccc10374e72239922c91568426225de23110245c9a590f92847b4c2f2c0a8471","0x7d57b0bcf499a41537cf5d60ac2c0446ecaae4219770b2749ea863eb0f8b0a59","0x40507785ecb965ad167eabb93b42eca6b9182d31b217199269551e54acff1746","0x7fbc35587c1aa0859f23c7d84c9bbc324de67ea4bc7d08adc756f7de92de473d","0x629756ae4dd1b1b03636d3efdd8b2d1e75bb75267f22e586d20783d90c560826","0x99535e19ebab9cb9d7dc9f03063bc82e6ecd28680c3c9c2dfd6b531d7e58aca5","0xe4cc2d08ff84068dea710de9e828e4b1ced182a46210d1fc861800cb81c71125"],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000200000")})).to.be.revertedWithCustomError(layerrMinter, "InvalidPaymentTokenType");
    });
    it("Should revert for invalid mint token type", async function () {
      const { owner, 
        layerrMinter, layerr1155, layerrRenderer, 
        layerr1155Proxy, proxiedLayerr1155, 
        layerr721Proxy, proxiedLayerr721, 
        layerr721AProxy, proxiedLayerr721A, 
        layerr20Proxy, proxiedLayerr20,
        address2, address3, address4, address5, address6 } = await loadFixture(deployLayerr);
        
      let layerrMinter2 = new hre.ethers.Contract(layerrMinter.target, layerrMinter.interface, address2);
      let layerrMinter3 = new hre.ethers.Contract(layerrMinter.target, layerrMinter.interface, address3);

      //ERC721A
      //Allowlist mint
      await expect(layerrMinter.mint([[[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",false,0,0,1,0,0]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x7af9632618071a13d0e29303fe0639b5ebc050a0088406d9330e6790c5012e08",0,false],1,"0x0dbbaf9b8f1ccfa029f425bb2532e59a9d314f543f968d79f37867bd2ab3ad8015a5ae0eee9aa8306d00a13742c39e059621e460b342f2d7122b8d6f76e7bb251b","0x00",["0xe96bd494eab8f3432b9292d1c247cb6c6a7820df810fbc8421b089fb74741ccd","0x47e61b0dd2d29a007ff31525df2dddf90bb8212ea5e245fe884c9ef8692927a5","0xdc1fd37824e674a202b72e985ace2977b6bfbb1e538daa8b327df9f6296239ff","0xd85e763487fafb493d0561a88d353f4512ff775abd12c8de2d7ec5dd8ab5b265","0x877d0b3daa6d0fa3940cb80c3b20ab31232daf9b1015562acd8e1660f61ca579","0xf489f4e10c498d3db9416e71cdb51520b29bb6d9fee46a19fd62c945adf8a9eb","0xccc10374e72239922c91568426225de23110245c9a590f92847b4c2f2c0a8471","0x7d57b0bcf499a41537cf5d60ac2c0446ecaae4219770b2749ea863eb0f8b0a59","0x40507785ecb965ad167eabb93b42eca6b9182d31b217199269551e54acff1746","0x7fbc35587c1aa0859f23c7d84c9bbc324de67ea4bc7d08adc756f7de92de473d","0x629756ae4dd1b1b03636d3efdd8b2d1e75bb75267f22e586d20783d90c560826","0x99535e19ebab9cb9d7dc9f03063bc82e6ecd28680c3c9c2dfd6b531d7e58aca5","0xe4cc2d08ff84068dea710de9e828e4b1ced182a46210d1fc861800cb81c71125"],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000200000")})).to.be.revertedWithCustomError(layerrMinter, "InvalidMintTokenType");
    });
    it("Should revert for invalid burn token type", async function () {
      const { owner, 
        layerrMinter, layerr1155, layerrRenderer, 
        layerr1155Proxy, proxiedLayerr1155, 
        layerr721Proxy, proxiedLayerr721, 
        layerr721AProxy, proxiedLayerr721A, 
        layerr20Proxy, proxiedLayerr20,
        address2, address3, address4, address5, address6 } = await loadFixture(deployLayerr);
        
      let layerrMinter2 = new hre.ethers.Contract(layerrMinter.target, layerrMinter.interface, address2);
      let layerrMinter3 = new hre.ethers.Contract(layerrMinter.target, layerrMinter.interface, address3);

      //ERC721A
      //Allowlist mint
      await layerrMinter.mint([[[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",false,2,0,1,100,1]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x7af9632618071a13d0e29303fe0639b5ebc050a0088406d9330e6790c5012e08",0,false],1,"0x36abb083d86c56910005689d6e34f3e32ec58fe1fd7540db32eadc269d094f04671da04fc8f6b13e570a01e4eff4899e7a12589c611dad02df4b02a2127b8e801c","0x00",["0xe96bd494eab8f3432b9292d1c247cb6c6a7820df810fbc8421b089fb74741ccd","0x47e61b0dd2d29a007ff31525df2dddf90bb8212ea5e245fe884c9ef8692927a5","0xdc1fd37824e674a202b72e985ace2977b6bfbb1e538daa8b327df9f6296239ff","0xd85e763487fafb493d0561a88d353f4512ff775abd12c8de2d7ec5dd8ab5b265","0x877d0b3daa6d0fa3940cb80c3b20ab31232daf9b1015562acd8e1660f61ca579","0xf489f4e10c498d3db9416e71cdb51520b29bb6d9fee46a19fd62c945adf8a9eb","0xccc10374e72239922c91568426225de23110245c9a590f92847b4c2f2c0a8471","0x7d57b0bcf499a41537cf5d60ac2c0446ecaae4219770b2749ea863eb0f8b0a59","0x40507785ecb965ad167eabb93b42eca6b9182d31b217199269551e54acff1746","0x7fbc35587c1aa0859f23c7d84c9bbc324de67ea4bc7d08adc756f7de92de473d","0x629756ae4dd1b1b03636d3efdd8b2d1e75bb75267f22e586d20783d90c560826","0x99535e19ebab9cb9d7dc9f03063bc82e6ecd28680c3c9c2dfd6b531d7e58aca5","0xe4cc2d08ff84068dea710de9e828e4b1ced182a46210d1fc861800cb81c71125"],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000200000")});      
      await layerrMinter2.mint([[[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",false,2,0,1,100,1]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x7af9632618071a13d0e29303fe0639b5ebc050a0088406d9330e6790c5012e08",0,false],1,"0x36abb083d86c56910005689d6e34f3e32ec58fe1fd7540db32eadc269d094f04671da04fc8f6b13e570a01e4eff4899e7a12589c611dad02df4b02a2127b8e801c","0x00",["0x0039d8715601ecfc758fa1b5d024764cab36aec36853668f84d99d8fb567eb82","0x1cdd8450273dfffb41b58fa3eeaff5eeee3838d5ba692130113b747a47888513","0x4abffc9dc4d4d2f8ce8b13977ea1a5379b4edce9dc6b44285bad96b67fbc780a","0xd85f72f853d11c771fe8ba267c742d8e9e7f1c549c194df3a7bdd081dbc315b2","0x1d488dc6b938006f609738221065269e444b46c1aa5e174604c5a3290dfa33f0","0x46b19170c3dd5ec82befaa1e2bafa7f8ada1653cf2e906cbd240212722a2f715","0x5e4ce910785c8dd52a4798ba988dd3ea338005877bff019818b8ef86524e0390","0x7d75828022c17f541c649fdff605588eb4c279e2fe214163686f1256f4dbba49","0x94b90a18118f20a441cb20d18178afe50aa32ba5768ad761768564a89a13da66","0x059ef41635f9f575961378550d0cf96f1e9f181ecb5c9bb087b15c475b65eb1d","0x596c630e202ccd26c48f062b2d4bf7ab3d614ec81ce1f8c46efcde97824cb926","0xb0b315be5fea95b5005b4494fda794d67d80533d9e21c8202090594538514a5d","0x548cfefc127c5bbf0255aa8d953142072a6821d22e8ed94e8edea8f5f585b0bd"],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000200000")});
      await expect(layerrMinter2.mint([[[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",false,2,0,1,100,1]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x7af9632618071a13d0e29303fe0639b5ebc050a0088406d9330e6790c5012e08",0,false],1,"0x36abb083d86c56910005689d6e34f3e32ec58fe1fd7540db32eadc269d094f04671da04fc8f6b13e570a01e4eff4899e7a12589c611dad02df4b02a2127b8e801c","0x00",["0x0039d8715601ecfc758fa1b5d024764cab36aec36853668f84d99d8fb567eb82","0x1cdd8450273dfffb41b58fa3eeaff5eeee3838d5ba692130113b747a47888513","0x4abffc9dc4d4d2f8ce8b13977ea1a5379b4edce9dc6b44285bad96b67fbc780a","0xd85f72f853d11c771fe8ba267c742d8e9e7f1c549c194df3a7bdd081dbc315b2","0x1d488dc6b938006f609738221065269e444b46c1aa5e174604c5a3290dfa33f0","0x46b19170c3dd5ec82befaa1e2bafa7f8ada1653cf2e906cbd240212722a2f715","0x5e4ce910785c8dd52a4798ba988dd3ea338005877bff019818b8ef86524e0390","0x7d75828022c17f541c649fdff605588eb4c279e2fe214163686f1256f4dbba49","0x94b90a18118f20a441cb20d18178afe50aa32ba5768ad761768564a89a13da66","0x059ef41635f9f575961378550d0cf96f1e9f181ecb5c9bb087b15c475b65eb1d","0x596c630e202ccd26c48f062b2d4bf7ab3d614ec81ce1f8c46efcde97824cb926","0xb0b315be5fea95b5005b4494fda794d67d80533d9e21c8202090594538514a5d","0x548cfefc127c5bbf0255aa8d953142072a6821d22e8ed94e8edea8f5f585b0bd"],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000100000")})).to.be.revertedWithCustomError(layerrMinter, "InsufficientPayment");

      await layerrMinter3.mint([[[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",false,2,0,1,100,3]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],1,"0xf0efbd89034cc675e07fa33b29395bb5adbc5a0c6acf20e55a182f4a5f4521385d5f5fc3ef5d451a77c92983955ad8a6573c64251a9db0d2a10403eb53a14cdf1c","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000200000")});
      await layerrMinter3.mint([[[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",false,2,0,1,100,3]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],2,"0xf0efbd89034cc675e07fa33b29395bb5adbc5a0c6acf20e55a182f4a5f4521385d5f5fc3ef5d451a77c92983955ad8a6573c64251a9db0d2a10403eb53a14cdf1c","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000400000")});
      
      let proxiedLayerr721A_3 = new hre.ethers.Contract(proxiedLayerr721A.target, proxiedLayerr721A.interface, address3);
      await proxiedLayerr721A_3.setApprovalForAll(layerrMinter.target, true);
      await expect(layerrMinter3.mint([[[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",false,2,0,5,0,0]],[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",false,0,0,0,1]],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,2,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],2,"0xc61c8277e84f426b2d340f623777d374aed8a6621ba2f467558b33e67c3a5bc81f27a14cbc6197f10ac069723425cbe7bc8b83b98d4ccb0232155721e9a711751b","0x00",[],[3,4], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000400000")})).to.be.revertedWithCustomError(layerrMinter, "InvalidBurnTokenType");
    });
    it("Should revert for invalid burn token id", async function () {
      const { owner, 
        layerrMinter, layerr1155, layerrRenderer, 
        layerr1155Proxy, proxiedLayerr1155, 
        layerr721Proxy, proxiedLayerr721, 
        layerr721AProxy, proxiedLayerr721A, 
        layerr20Proxy, proxiedLayerr20,
        address2, address3, address4, address5, address6 } = await loadFixture(deployLayerr);
        
      let layerrMinter2 = new hre.ethers.Contract(layerrMinter.target, layerrMinter.interface, address2);
      let layerrMinter3 = new hre.ethers.Contract(layerrMinter.target, layerrMinter.interface, address3);

      //ERC721A
      //Allowlist mint
      await layerrMinter.mint([[[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",false,2,0,1,100,1]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x7af9632618071a13d0e29303fe0639b5ebc050a0088406d9330e6790c5012e08",0,false],1,"0x36abb083d86c56910005689d6e34f3e32ec58fe1fd7540db32eadc269d094f04671da04fc8f6b13e570a01e4eff4899e7a12589c611dad02df4b02a2127b8e801c","0x00",["0xe96bd494eab8f3432b9292d1c247cb6c6a7820df810fbc8421b089fb74741ccd","0x47e61b0dd2d29a007ff31525df2dddf90bb8212ea5e245fe884c9ef8692927a5","0xdc1fd37824e674a202b72e985ace2977b6bfbb1e538daa8b327df9f6296239ff","0xd85e763487fafb493d0561a88d353f4512ff775abd12c8de2d7ec5dd8ab5b265","0x877d0b3daa6d0fa3940cb80c3b20ab31232daf9b1015562acd8e1660f61ca579","0xf489f4e10c498d3db9416e71cdb51520b29bb6d9fee46a19fd62c945adf8a9eb","0xccc10374e72239922c91568426225de23110245c9a590f92847b4c2f2c0a8471","0x7d57b0bcf499a41537cf5d60ac2c0446ecaae4219770b2749ea863eb0f8b0a59","0x40507785ecb965ad167eabb93b42eca6b9182d31b217199269551e54acff1746","0x7fbc35587c1aa0859f23c7d84c9bbc324de67ea4bc7d08adc756f7de92de473d","0x629756ae4dd1b1b03636d3efdd8b2d1e75bb75267f22e586d20783d90c560826","0x99535e19ebab9cb9d7dc9f03063bc82e6ecd28680c3c9c2dfd6b531d7e58aca5","0xe4cc2d08ff84068dea710de9e828e4b1ced182a46210d1fc861800cb81c71125"],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000200000")});      
      await layerrMinter2.mint([[[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",false,2,0,1,100,1]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x7af9632618071a13d0e29303fe0639b5ebc050a0088406d9330e6790c5012e08",0,false],1,"0x36abb083d86c56910005689d6e34f3e32ec58fe1fd7540db32eadc269d094f04671da04fc8f6b13e570a01e4eff4899e7a12589c611dad02df4b02a2127b8e801c","0x00",["0x0039d8715601ecfc758fa1b5d024764cab36aec36853668f84d99d8fb567eb82","0x1cdd8450273dfffb41b58fa3eeaff5eeee3838d5ba692130113b747a47888513","0x4abffc9dc4d4d2f8ce8b13977ea1a5379b4edce9dc6b44285bad96b67fbc780a","0xd85f72f853d11c771fe8ba267c742d8e9e7f1c549c194df3a7bdd081dbc315b2","0x1d488dc6b938006f609738221065269e444b46c1aa5e174604c5a3290dfa33f0","0x46b19170c3dd5ec82befaa1e2bafa7f8ada1653cf2e906cbd240212722a2f715","0x5e4ce910785c8dd52a4798ba988dd3ea338005877bff019818b8ef86524e0390","0x7d75828022c17f541c649fdff605588eb4c279e2fe214163686f1256f4dbba49","0x94b90a18118f20a441cb20d18178afe50aa32ba5768ad761768564a89a13da66","0x059ef41635f9f575961378550d0cf96f1e9f181ecb5c9bb087b15c475b65eb1d","0x596c630e202ccd26c48f062b2d4bf7ab3d614ec81ce1f8c46efcde97824cb926","0xb0b315be5fea95b5005b4494fda794d67d80533d9e21c8202090594538514a5d","0x548cfefc127c5bbf0255aa8d953142072a6821d22e8ed94e8edea8f5f585b0bd"],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000200000")});
      await expect(layerrMinter2.mint([[[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",false,2,0,1,100,1]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x7af9632618071a13d0e29303fe0639b5ebc050a0088406d9330e6790c5012e08",0,false],1,"0x36abb083d86c56910005689d6e34f3e32ec58fe1fd7540db32eadc269d094f04671da04fc8f6b13e570a01e4eff4899e7a12589c611dad02df4b02a2127b8e801c","0x00",["0x0039d8715601ecfc758fa1b5d024764cab36aec36853668f84d99d8fb567eb82","0x1cdd8450273dfffb41b58fa3eeaff5eeee3838d5ba692130113b747a47888513","0x4abffc9dc4d4d2f8ce8b13977ea1a5379b4edce9dc6b44285bad96b67fbc780a","0xd85f72f853d11c771fe8ba267c742d8e9e7f1c549c194df3a7bdd081dbc315b2","0x1d488dc6b938006f609738221065269e444b46c1aa5e174604c5a3290dfa33f0","0x46b19170c3dd5ec82befaa1e2bafa7f8ada1653cf2e906cbd240212722a2f715","0x5e4ce910785c8dd52a4798ba988dd3ea338005877bff019818b8ef86524e0390","0x7d75828022c17f541c649fdff605588eb4c279e2fe214163686f1256f4dbba49","0x94b90a18118f20a441cb20d18178afe50aa32ba5768ad761768564a89a13da66","0x059ef41635f9f575961378550d0cf96f1e9f181ecb5c9bb087b15c475b65eb1d","0x596c630e202ccd26c48f062b2d4bf7ab3d614ec81ce1f8c46efcde97824cb926","0xb0b315be5fea95b5005b4494fda794d67d80533d9e21c8202090594538514a5d","0x548cfefc127c5bbf0255aa8d953142072a6821d22e8ed94e8edea8f5f585b0bd"],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000100000")})).to.be.revertedWithCustomError(layerrMinter, "InsufficientPayment");

      await layerrMinter3.mint([[[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",false,2,0,1,100,3]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],1,"0xf0efbd89034cc675e07fa33b29395bb5adbc5a0c6acf20e55a182f4a5f4521385d5f5fc3ef5d451a77c92983955ad8a6573c64251a9db0d2a10403eb53a14cdf1c","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000200000")});
      await layerrMinter3.mint([[[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",false,2,0,1,100,3]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],2,"0xf0efbd89034cc675e07fa33b29395bb5adbc5a0c6acf20e55a182f4a5f4521385d5f5fc3ef5d451a77c92983955ad8a6573c64251a9db0d2a10403eb53a14cdf1c","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000400000")});
      
      let proxiedLayerr721A_3 = new hre.ethers.Contract(proxiedLayerr721A.target, proxiedLayerr721A.interface, address3);
      await proxiedLayerr721A_3.setApprovalForAll(layerrMinter.target, true);
      await expect(layerrMinter3.mint([[[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",false,2,0,5,0,0]],[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",true,2,0,3,1]],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],1,"0xb0ad3338bac6df103cdb92408f0a3c3ad4019286b1f72ccc85a51f1a39c1896004243604d0203af52f362394be7a4f9cd5d2fdd2c48123c56b0d0a549079f5b11b","0x00",[],[3], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000200000")})).to.not.be.reverted;
      await expect(layerrMinter3.mint([[[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",false,2,0,5,0,0]],[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",true,2,0,3,1]],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],1,"0xb0ad3338bac6df103cdb92408f0a3c3ad4019286b1f72ccc85a51f1a39c1896004243604d0203af52f362394be7a4f9cd5d2fdd2c48123c56b0d0a549079f5b11b","0x00",[],[4], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000200000")})).to.be.revertedWithCustomError(layerrMinter, "InvalidBurnTokenId");
    });
    it("Should revert for cannot burn multiple ERC721 with Same Id", async function () {
      const { owner, 
        layerrMinter, layerr1155, layerrRenderer, 
        layerr1155Proxy, proxiedLayerr1155, 
        layerr721Proxy, proxiedLayerr721, 
        layerr721AProxy, proxiedLayerr721A, 
        layerr20Proxy, proxiedLayerr20,
        address2, address3, address4, address5, address6 } = await loadFixture(deployLayerr);
        
      let layerrMinter3 = new hre.ethers.Contract(layerrMinter.target, layerrMinter.interface, address3);
      let proxiedLayerr721A_3 = new hre.ethers.Contract(proxiedLayerr721A.target, proxiedLayerr721A.interface, address3);

      await layerrMinter3.mint([[[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",false,2,0,1,100,3]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],1,"0xf0efbd89034cc675e07fa33b29395bb5adbc5a0c6acf20e55a182f4a5f4521385d5f5fc3ef5d451a77c92983955ad8a6573c64251a9db0d2a10403eb53a14cdf1c","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000200000")});
      expect(await proxiedLayerr721A.balanceOf(address3.address)).to.equal(1);
      expect(await proxiedLayerr721A.ownerOf(0)).to.equal(address3.address);
      await layerrMinter3.mint([[[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",false,2,0,1,100,3]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],2,"0xf0efbd89034cc675e07fa33b29395bb5adbc5a0c6acf20e55a182f4a5f4521385d5f5fc3ef5d451a77c92983955ad8a6573c64251a9db0d2a10403eb53a14cdf1c","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000400000")});
      expect(await proxiedLayerr721A.balanceOf(address3.address)).to.equal(3);
      expect(await proxiedLayerr721A.ownerOf(1)).to.equal(address3.address);
      expect(await proxiedLayerr721A.ownerOf(2)).to.equal(address3.address);
      //CannotBurnMultipleERC721WithSameId
      await proxiedLayerr721A_3.setApprovalForAll(layerrMinter.target, true);
      await expect(layerrMinter3.mint([[[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",false,2,0,1,0,0]],[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",true,2,0,0,1]],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],2,"0x48b4d381bd2efd0b46765c6e92f18637b56dad627ea6b36942bd12dc45dc1ae10d928d3c4aa9bb8c970aeaa0425fa661bcbe26a3904cdc587aebae575b83868e1b","0x00",[],[0,1], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000400000")})).to.be.revertedWithCustomError(layerrMinter, "CannotBurnMultipleERC721WithSameId");
    });
    it("Should revert for invalid merkle proof", async function () {
      const { owner, 
        layerrMinter, layerr1155, layerrRenderer, 
        layerr1155Proxy, proxiedLayerr1155, 
        layerr721Proxy, proxiedLayerr721, 
        layerr721AProxy, proxiedLayerr721A, 
        layerr20Proxy, proxiedLayerr20,
        address2, address3, address4, address5, address6 } = await loadFixture(deployLayerr);
        
      let layerrMinter2 = new hre.ethers.Contract(layerrMinter.target, layerrMinter.interface, address2);

      await expect(layerrMinter.mint([[[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",false,2,0,1,100,1]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x7af9632618071a13d0e29303fe0639b5ebc050a0088406d9330e6790c5012e08",0,false],1,"0x36abb083d86c56910005689d6e34f3e32ec58fe1fd7540db32eadc269d094f04671da04fc8f6b13e570a01e4eff4899e7a12589c611dad02df4b02a2127b8e801c","0x00",["0xe96bd494eab8f3432b9292d1c247cb6c6a7820df810fbc8421b089fb74741ccd","0x47e61b0dd2d29a007ff31525df2dddf90bb8212ea5e245fe884c9ef8692927a5","0xdc1fd37824e674a202b72e985ace2977b6bfbb1e538daa8b327df9f6296239ff","0xd85e763487fafb493d0561a88d353f4512ff775abd12c8de2d7ec5dd8ab5b265","0x877d0b3daa6d0fa3940cb80c3b20ab31232daf9b1015562acd8e1660f61ca579","0xf489f4e10c498d3db9416e71cdb51520b29bb6d9fee46a19fd62c945adf8a9eb","0xccc10374e72239922c91568426225de23110245c9a590f92847b4c2f2c0a8471","0x7d57b0bcf499a41537cf5d60ac2c0446ecaae4219770b2749ea863eb0f8b0a59","0x40507785ecb965ad167eabb93b42eca6b9182d31b217199269551e54acff1746","0x7fbc35587c1aa0859f23c7d84c9bbc324de67ea4bc7d08adc756f7de92de473d","0x629756ae4dd1b1b03636d3efdd8b2d1e75bb75267f22e586d20783d90c560826","0x99535e19ebab9cb9d7dc9f03063bc82e6ecd28680c3c9c2dfd6b531d7e58aca5"],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000200000")})).to.be.revertedWithCustomError(layerrMinter, "InvalidMerkleProof");

      //single account proof
      await expect(layerrMinter.mint([[[["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,88,1,0,0]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x00314e565e0574cb412563df634608d76f5c59d9f817e85966100ec1d48005c0",0,false],1,"0x8c5913b9e0b6bed96b6769e221404de48a43b8b06c3b471a7f8099fdd0c629d605958c2aa24ccb2570a77a8a80bebc63340e8ba3c39c067387361cb79cf1075a1c","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000200000")})).to.be.revertedWithCustomError(layerrMinter, "InvalidMerkleProof");
      await expect(layerrMinter2.mint([[[["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,88,1,0,0]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x00314e565e0574cb412563df634608d76f5c59d9f817e85966100ec1d48005c0",0,false],1,"0x8c5913b9e0b6bed96b6769e221404de48a43b8b06c3b471a7f8099fdd0c629d605958c2aa24ccb2570a77a8a80bebc63340e8ba3c39c067387361cb79cf1075a1c","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000200000")})).to.not.be.revertedWithCustomError(layerrMinter, "InvalidMerkleProof");
    });
    it("Should revert for invalid oracle signature", async function () {
      const { owner, 
        layerrMinter, layerr1155, layerrRenderer, 
        layerr1155Proxy, proxiedLayerr1155, 
        layerr721Proxy, proxiedLayerr721, 
        layerr721AProxy, proxiedLayerr721A, 
        layerr20Proxy, proxiedLayerr20,
        address2, address3, address4, address5, address6 } = await loadFixture(deployLayerr);
        

        await proxiedLayerr1155.setContractAllowedOracle(layerrMinter.target, oracle_signer, true);
        await expect(layerrMinter.mint([[[["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,32,1,0,0]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,true],3,"0xd8b7ee4d951c2df4141c6f0d771620d6e9b766b5e6bc1f5322fd9c55b827171c7d036b64f67ee4d7aff8bd723f28d170063e3659a1431535db88b2bd81201c7c1c","0xa51d3dac7b6de19485740af755af71dc9ec3616eea12585fa8f2ee1a12e350d3517b119f41afc51e8fa82adf4b8f129467a2ab32e42ba7435999a66a4dea9f221b",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000600000")})).to.be.revertedWithCustomError(layerrMinter, "InvalidOracleSignature");
    });
    it("Should revert for mint not started", async function () {
      const { owner, 
        layerrMinter, layerr1155, layerrRenderer, 
        layerr1155Proxy, proxiedLayerr1155, 
        layerr721Proxy, proxiedLayerr721, 
        layerr721AProxy, proxiedLayerr721A, 
        layerr20Proxy, proxiedLayerr20,
        address2, address3, address4, address5, address6 } = await loadFixture(deployLayerr);
        
      await expect(layerrMinter.mint([[[["0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",true,2,0,1,0,0]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],(1686338677+1*60*60*24*365),(1686338677+2*60*60*24*365),0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],1,"0x526a05351886716302113fad32650149e1ce8e37a0f5fa5a0f70c2859623d972509a3bd200378c8ddf9bf98974b7f43777efbd93e312a38377895416ddb5778f1c","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000200000")})).to.be.revertedWithCustomError(layerrMinter, "MintHasNotStarted");
    });
    it("Should revert for mint ended", async function () {
      const { owner, 
        layerrMinter, layerr1155, layerrRenderer, 
        layerr1155Proxy, proxiedLayerr1155, 
        layerr721Proxy, proxiedLayerr721, 
        layerr721AProxy, proxiedLayerr721A, 
        layerr20Proxy, proxiedLayerr20,
        address2, address3, address4, address5, address6 } = await loadFixture(deployLayerr);
        
      await expect(layerrMinter.mint([[[["0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",true,2,0,1,0,0]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],(1686338677-1*60*60*24*365),(1686338677+0*60*60*24*365),0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],1,"0xa5794e6e3f3e3e7169d43cdf5860ba4f0765c44301446cb8ebd35726943bb5da42203285e199680aa368bf33f0d3326a26c610726c7e1b6189689fbd353dda4b1b","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000200000")})).to.be.revertedWithCustomError(layerrMinter, "MintHasEnded");
    });
    it("Should revert for invalid nonce increment signature", async function () {
      const { owner, 
        layerrMinter, layerr1155, layerrRenderer, 
        layerr1155Proxy, proxiedLayerr1155, 
        layerr721Proxy, proxiedLayerr721, 
        layerr721AProxy, proxiedLayerr721A, 
        layerr20Proxy, proxiedLayerr20,
        address2, address3, address4, address5, address6 } = await loadFixture(deployLayerr);
      
      console.log("Original nonce: " + await layerrMinter.signerNonce("0xbe93f9bacbcffc8ee6663f2647917ed7a20a57bb"));
      //signature modified
      await expect(layerrMinter.incrementNonceFor("0xbe93f9bacbcffc8ee6663f2647917ed7a20a57bb", "0xaa45b104a5a760f39dcdd7f8a5f894d29c6fe75625f5b04dcc36775d38fb4f744625918e7ad7ea161538213174f569fd681e1441aa84e73a0b322cb89aed63951c")).to.be.revertedWithCustomError(layerrMinter, "InvalidSignatureToIncrementNonce");
      //original signature
      await expect(layerrMinter.incrementNonceFor("0xbe93f9bacbcffc8ee6663f2647917ed7a20a57bb", "0xda45b104a5a760f39dcdd7f8a5f894d29c6fe75625f5b04dcc36775d38fb4f744625918e7ad7ea161538213174f569fd681e1441aa84e73a0b322cb89aed63951c")).to.not.be.reverted;
      //original signature again, should revert because nonce is different
      await expect(layerrMinter.incrementNonceFor("0xbe93f9bacbcffc8ee6663f2647917ed7a20a57bb", "0xda45b104a5a760f39dcdd7f8a5f894d29c6fe75625f5b04dcc36775d38fb4f744625918e7ad7ea161538213174f569fd681e1441aa84e73a0b322cb89aed63951c")).to.be.revertedWithCustomError(layerrMinter, "InvalidSignatureToIncrementNonce");
      console.log("New nonce: " + await layerrMinter.signerNonce("0xbe93f9bacbcffc8ee6663f2647917ed7a20a57bb"));
    });
    it("Should have the right tokenURIs", async function () {
      const { owner, 
        layerrMinter, layerr1155, layerrRenderer, 
        layerr1155Proxy, proxiedLayerr1155, 
        layerr721Proxy, proxiedLayerr721, 
        layerr721AProxy, proxiedLayerr721A, 
        layerr20Proxy, proxiedLayerr20,
        address2, address3, address4, address5, address6, layerrWallet } = await loadFixture(deployLayerr);
        
      expect(await proxiedLayerr1155.uri(0)).to.equal("https://metadata.layerr.art/31337/" + proxiedLayerr1155.target.substring(2).toLowerCase() + "/0");
      expect(await proxiedLayerr721.tokenURI(0)).to.equal("https://metadata.layerr.art/31337/" + proxiedLayerr721.target.substring(2).toLowerCase() + "/0");
      expect(await proxiedLayerr721A.tokenURI(0)).to.equal("https://metadata.layerr.art/31337/" + proxiedLayerr721A.target.substring(2).toLowerCase() + "/0");
      
      expect(await proxiedLayerr1155.contractURI()).to.equal("https://contract-metadata.layerr.art/31337/" + proxiedLayerr1155.target.substring(2).toLowerCase());
      
      await layerrRenderer.setContractBaseTokenUri(proxiedLayerr1155.target, "ipfs://test", 1);
      expect(await proxiedLayerr1155.uri(0)).to.equal("ipfs://test");

      await layerrRenderer.setContractBaseTokenUri(proxiedLayerr1155.target, "ipfs://test/", 2);
      expect(await proxiedLayerr1155.uri(0)).to.equal("ipfs://test/0");

      await layerrRenderer.setContractBaseTokenUri(proxiedLayerr1155.target, "ipfs://test/", 0);
      expect(await proxiedLayerr1155.uri(0)).to.equal("https://metadata.layerr.art/31337/" + proxiedLayerr1155.target.substring(2).toLowerCase() + "/0");

      await expect(layerrRenderer.setContractBaseTokenUriForLayerrHostedIPFS(proxiedLayerr1155.target, "ipfs://abcdefg/", false, [0,1,5], 1234567890, "0x791c3de093c11329a805a231d4aa9a7ffd6d35df2c0b6d15fe428a138b0a4dc162962246b997c19ebf1325e8db10ac5cac81536073135847c6599859502717f91b", {value: ethers.parseEther("0.000000001")})).to.be.reverted;
      
      let signData = layerrRenderer.interface.encodeFunctionData("setLayerrSigner", ["0xe03c66583975b44958c53687ea1100adce60f7e7"]);
      let signatures = [signChainlessCall(layerrWalletPK1, 0, layerrRenderer.target, 0, signData, 0), signChainlessCall(layerrWalletPK2, 0, layerrRenderer.target, 0, signData, 0), signChainlessCall(layerrWalletPK3, 0, layerrRenderer.target, 0, signData, 0), signChainlessCall(layerrWalletPK4, 0, layerrRenderer.target, 0, signData, 0)]
      await layerrWallet.chainlessCall([0, layerrRenderer.target, 0, signData, 0], signatures);
      await expect(layerrWallet.chainlessCall([0, layerrRenderer.target, 0, signData, 0], signatures)).to.be.revertedWithCustomError(layerrWallet, "InvalidNonce");

      //await layerrRenderer.setLayerrSigner("0xe03c66583975b44958c53687ea1100adce60f7e7");
      await expect(layerrRenderer.setContractBaseTokenUriForLayerrHostedIPFS(proxiedLayerr1155.target, "ipfs://abcdefg/", false, [0,1,5], 1234567890, "0x791c3de093c11329a805a231d4aa9a7ffd6d35df2c0b6d15fe428a138b0a4dc162962246b997c19ebf1325e8db10ac5cac81536073135847c6599859502717f91b", {value: ethers.parseEther("0.000000001")})).to.not.be.reverted;
      expect(await proxiedLayerr1155.uri(2)).to.equal("https://metadata.layerr.art/31337/" + proxiedLayerr1155.target.substring(2).toLowerCase() + "/2");
      expect(await proxiedLayerr1155.uri(3)).to.equal("https://metadata.layerr.art/31337/" + proxiedLayerr1155.target.substring(2).toLowerCase() + "/3");
      expect(await proxiedLayerr1155.uri(4)).to.equal("https://metadata.layerr.art/31337/" + proxiedLayerr1155.target.substring(2).toLowerCase() + "/4");
      expect(await proxiedLayerr1155.uri(0)).to.equal("ipfs://abcdefg/0");
      expect(await proxiedLayerr1155.uri(1)).to.equal("ipfs://abcdefg/1");
      expect(await proxiedLayerr1155.uri(5)).to.equal("ipfs://abcdefg/5");
      
      await expect(layerrRenderer.setContractBaseTokenUriForLayerrHostedIPFS(proxiedLayerr1155.target, "ipfs://abcdef/", false, [0,1,5], 1234567890, "0x791c3de093c11329a805a231d4aa9a7ffd6d35df2c0b6d15fe428a138b0a4dc162962246b997c19ebf1325e8db10ac5cac81536073135847c6599859502717f91b", {value: ethers.parseEther("0.000000001")})).to.be.revertedWithCustomError(layerrRenderer, "InvalidSignature");
      await expect(layerrRenderer.setContractBaseTokenUriForLayerrHostedIPFS(proxiedLayerr1155.target, "ipfs://abcdefg/", false, [0,1,5], 1234567890, "0x791c3de093c11329a805a231d4aa9a7ffd6d35df2c0b6d15fe428a138b0a4dc162962246b997c19ebf1325e8db10ac5cac81536073135847c6599859502717f91b", {value: ethers.parseEther("0.0000000001")})).to.be.revertedWithCustomError(layerrRenderer, "InvalidSignature");
      await expect(layerrRenderer.setContractBaseTokenUriForLayerrHostedIPFS(proxiedLayerr1155.target, "ipfs://abcdefg/", false, [0,1,5], 1234567890, "0x888c3de093c11329a805a231d4aa9a7ffd6d35df2c0b6d15fe428a138b0a4dc162962246b997c19ebf1325e8db10ac5cac81536073135847c6599859502717f91b", {value: ethers.parseEther("0.000000001")})).to.be.revertedWithCustomError(layerrRenderer, "InvalidSignature");
    });
    it("Should reject invalid multisig requests", async function () {
      const { owner, 
        layerrMinter, layerr1155, layerrRenderer, 
        layerr1155Proxy, proxiedLayerr1155, 
        layerr721Proxy, proxiedLayerr721, 
        layerr721AProxy, proxiedLayerr721A, 
        layerr20Proxy, proxiedLayerr20,
        address2, address3, address4, address5, address6, layerrWallet } = await loadFixture(deployLayerr);
        
      let chainlessCallNonce = 0;
      let callNonce = 0;
      currentSignerCount = 4;
      expect(await layerrWallet.currentSigners()).to.equal(currentSignerCount);
      expect(await layerrWallet.chainCallNonce()).to.equal(callNonce);
      expect(await layerrWallet.chainlessCallNonce()).to.equal(chainlessCallNonce);
      expect(await layerrWallet.minimumSignatures()).to.equal(2);

      let signData = layerrRenderer.interface.encodeFunctionData("setLayerrSigner", ["0xe03c66583975b44958c53687ea1100adce60f7e7"]);
      let signatures = [signChainlessCall(layerrWalletPK1, chainlessCallNonce, layerrRenderer.target, 0, signData, 0), signChainlessCall(layerrWalletPK2, chainlessCallNonce, layerrRenderer.target, 0, signData, 0), signChainlessCall(layerrWalletPK3, chainlessCallNonce, layerrRenderer.target, 0, signData, 0), signChainlessCall(layerrWalletPK4, chainlessCallNonce, layerrRenderer.target, 0, signData, 0)]
      let signaturesLowGas = [signChainlessCall(layerrWalletPK1, chainlessCallNonce, layerrRenderer.target, 0, signData, 100), signChainlessCall(layerrWalletPK2, chainlessCallNonce, layerrRenderer.target, 0, signData, 100), signChainlessCall(layerrWalletPK3, chainlessCallNonce, layerrRenderer.target, 0, signData, 100), signChainlessCall(layerrWalletPK4, chainlessCallNonce, layerrRenderer.target, 0, signData, 100)]
      
      await expect(layerrWallet.chainlessCall([chainlessCallNonce, layerrRenderer.target, 0, signData, 100], signaturesLowGas)).to.be.revertedWithCustomError(layerrWallet, "CallFailed");
      await expect(layerrWallet.chainlessCall([chainlessCallNonce, layerrRenderer.target, 0, signData, 0], signatures.slice(3))).to.be.revertedWithCustomError(layerrWallet, "NotEnoughSigners");
      await expect(layerrWallet.chainlessCall([chainlessCallNonce, layerrRenderer.target, 0, signData, 0], [])).to.be.revertedWithCustomError(layerrWallet, "NotEnoughSigners");
      await expect(layerrWallet.chainlessCall([chainlessCallNonce, layerrRenderer.target, 0, signData, 0], [signatures[3], "0x1234567890123456789012345678901234567890123456789012345678901c"])).to.be.revertedWithCustomError(layerrWallet, "SignaturesOutOfOrder");
      await expect(layerrWallet.chainCall([chainlessCallNonce, layerrRenderer.target, 0, signData, 0], signatures)).to.be.revertedWithCustomError(layerrWallet, "SignaturesOutOfOrder");
      await expect(layerrWallet.chainlessCall([chainlessCallNonce, layerrRenderer.target, 0, signData, 0], [signatures[3], signatures[2]])).to.be.revertedWithCustomError(layerrWallet, "SignaturesOutOfOrder");
      await expect(layerrWallet.chainlessCall([chainlessCallNonce, layerrRenderer.target, 0, signData, 0], [signatures[3], signatures[3]])).to.be.revertedWithCustomError(layerrWallet, "SignaturesOutOfOrder");
      await layerrWallet.chainlessCall([chainlessCallNonce, layerrRenderer.target, 0, signData, 0], [signatures[1], signatures[3]]);
      await expect(layerrWallet.chainlessCall([chainlessCallNonce, layerrRenderer.target, 0, signData, 0], signatures)).to.be.revertedWithCustomError(layerrWallet, "InvalidNonce");
      chainlessCallNonce++;

      expect(await layerrWallet.currentSigners()).to.equal(currentSignerCount);
      expect(await layerrWallet.chainCallNonce()).to.equal(callNonce);
      expect(await layerrWallet.chainlessCallNonce()).to.equal(chainlessCallNonce);
      expect(await layerrWallet.minimumSignatures()).to.equal(2);

      let sendEthToWallet = "0x1234567890123456789012345678901234567890";
      let sendValue = 1000000000;
      console.log("LayerrWallet balance: " + await ethers.provider.getBalance(layerrWallet.target));
      console.log("Destination balance: " + await ethers.provider.getBalance(sendEthToWallet));
      signData = "0x"
      signatures = [signCall(layerrWalletPK1, callNonce, sendEthToWallet, sendValue, signData, 0), signCall(layerrWalletPK2, callNonce, sendEthToWallet, sendValue, signData, 0), signCall(layerrWalletPK3, callNonce, sendEthToWallet, sendValue, signData, 0), signCall(layerrWalletPK4, callNonce, sendEthToWallet, sendValue, signData, 0)]
      await layerrWallet.chainCall([callNonce, sendEthToWallet, sendValue, signData, 0], signatures);
      console.log("LayerrWallet balance: " + await ethers.provider.getBalance(layerrWallet.target));
      console.log("Destination balance: " + await ethers.provider.getBalance(sendEthToWallet));
      await expect(layerrWallet.chainCall([callNonce, sendEthToWallet, sendValue, signData, 0], signatures)).to.be.revertedWithCustomError(layerrWallet, "InvalidNonce");
      callNonce++;
      signatures = [signCall(layerrWalletPK1, callNonce, sendEthToWallet, sendValue, signData, 0), signCall(layerrWalletPK2, callNonce, sendEthToWallet, sendValue, signData, 0), signCall(layerrWalletPK3, callNonce, sendEthToWallet, sendValue, signData, 0), signCall(layerrWalletPK4, callNonce, sendEthToWallet, sendValue, signData, 0)]
      await expect(layerrWallet.chainCall([callNonce, sendEthToWallet, sendValue, signData, 0], [signatures[3], signatures[1]])).to.be.revertedWithCustomError(layerrWallet, "SignaturesOutOfOrder");
      await expect(layerrWallet.chainCall([callNonce, sendEthToWallet, sendValue, signData, 0], [signatures[3]])).to.be.revertedWithCustomError(layerrWallet, "NotEnoughSigners");
      await layerrWallet.chainCall([callNonce, sendEthToWallet, sendValue, signData, 0], signatures);
      console.log("LayerrWallet balance: " + await ethers.provider.getBalance(layerrWallet.target));
      console.log("Destination balance: " + await ethers.provider.getBalance(sendEthToWallet));
      await expect(layerrWallet.chainCall([15, sendEthToWallet, sendValue, signData, 0], signatures)).to.be.revertedWithCustomError(layerrWallet, "InvalidNonce");
      callNonce++;

      expect(await layerrWallet.currentSigners()).to.equal(currentSignerCount);
      expect(await layerrWallet.chainCallNonce()).to.equal(callNonce);
      expect(await layerrWallet.chainlessCallNonce()).to.equal(chainlessCallNonce);
      expect(await layerrWallet.minimumSignatures()).to.equal(2);

      signData = layerrWallet.interface.encodeFunctionData("removeSigner", ["0x0D8e461687b7D06f86EC348E0c270b0F279855F0"]);
      signatures = [signChainlessCall(layerrWalletPK1, chainlessCallNonce, layerrWallet.target, 0, signData, 0), signChainlessCall(layerrWalletPK2, chainlessCallNonce, layerrWallet.target, 0, signData, 0), signChainlessCall(layerrWalletPK3, chainlessCallNonce, layerrWallet.target, 0, signData, 0), signChainlessCall(layerrWalletPK4, chainlessCallNonce, layerrWallet.target, 0, signData, 0)]
      await layerrWallet.chainlessCall([chainlessCallNonce, layerrWallet.target, 0, signData, 0], signatures);
      chainlessCallNonce++;
      currentSignerCount--;

      expect(await layerrWallet.currentSigners()).to.equal(currentSignerCount);
      expect(await layerrWallet.chainCallNonce()).to.equal(callNonce);
      expect(await layerrWallet.chainlessCallNonce()).to.equal(chainlessCallNonce);
      expect(await layerrWallet.minimumSignatures()).to.equal(2);

      signatures = [signCall(layerrWalletPK1, callNonce, sendEthToWallet, sendValue, signData, 0), signCall(layerrWalletPK2, callNonce, sendEthToWallet, sendValue, signData, 0), signCall(layerrWalletPK3, callNonce, sendEthToWallet, sendValue, signData, 0), signCall(layerrWalletPK4, callNonce, sendEthToWallet, sendValue, signData, 0)]
      await expect(layerrWallet.chainCall([callNonce, sendEthToWallet, sendValue, signData, 0], [signatures[3], signatures[1]])).to.be.revertedWithCustomError(layerrWallet, "SignaturesOutOfOrder");
      await expect(layerrWallet.chainCall([callNonce, sendEthToWallet, sendValue, signData, 0], [signatures[3]])).to.be.revertedWithCustomError(layerrWallet, "NotEnoughSigners");
      await layerrWallet.chainCall([callNonce, sendEthToWallet, sendValue, signData, 0], signatures.slice(1));
      console.log("LayerrWallet balance: " + await ethers.provider.getBalance(layerrWallet.target));
      console.log("Destination balance: " + await ethers.provider.getBalance(sendEthToWallet));
      await expect(layerrWallet.chainCall([15, sendEthToWallet, sendValue, signData, 0], signatures)).to.be.revertedWithCustomError(layerrWallet, "InvalidNonce");
      callNonce++;

      expect(await layerrWallet.currentSigners()).to.equal(currentSignerCount);
      expect(await layerrWallet.chainCallNonce()).to.equal(callNonce);
      expect(await layerrWallet.chainlessCallNonce()).to.equal(chainlessCallNonce);
      expect(await layerrWallet.minimumSignatures()).to.equal(2);

      signData = layerrWallet.interface.encodeFunctionData("addSigner", ["0x0D8e461687b7D06f86EC348E0c270b0F279855F0"]);
      signatures = [signChainlessCall(layerrWalletPK1, chainlessCallNonce, layerrWallet.target, 0, signData, 0), signChainlessCall(layerrWalletPK2, chainlessCallNonce, layerrWallet.target, 0, signData, 0), signChainlessCall(layerrWalletPK3, chainlessCallNonce, layerrWallet.target, 0, signData, 0), signChainlessCall(layerrWalletPK4, chainlessCallNonce, layerrWallet.target, 0, signData, 0)]
      await layerrWallet.chainlessCall([chainlessCallNonce, layerrWallet.target, 0, signData, 0], signatures.slice(1));
      chainlessCallNonce++;
      currentSignerCount++;

      expect(await layerrWallet.currentSigners()).to.equal(currentSignerCount);
      expect(await layerrWallet.chainCallNonce()).to.equal(callNonce);
      expect(await layerrWallet.chainlessCallNonce()).to.equal(chainlessCallNonce);
      expect(await layerrWallet.minimumSignatures()).to.equal(2);

      signatures = [signCall(layerrWalletPK2, callNonce, sendEthToWallet, sendValue, signData, 0), signCall(layerrWalletPK3, callNonce, sendEthToWallet, sendValue, signData, 0), signCall(layerrWalletPK4, callNonce, sendEthToWallet, sendValue, signData, 0), signCall(layerrWalletPK1, callNonce, sendEthToWallet, sendValue, signData, 0)]
      await expect(layerrWallet.chainCall([callNonce, sendEthToWallet, sendValue, signData, 0], [signatures[3], signatures[1]])).to.be.revertedWithCustomError(layerrWallet, "SignaturesOutOfOrder");
      await expect(layerrWallet.chainCall([callNonce, sendEthToWallet, sendValue, signData, 0], [signatures[3]])).to.be.revertedWithCustomError(layerrWallet, "NotEnoughSigners");
      await layerrWallet.chainCall([callNonce, sendEthToWallet, sendValue, signData, 0], signatures.slice(1));
      console.log("LayerrWallet balance: " + await ethers.provider.getBalance(layerrWallet.target));
      console.log("Destination balance: " + await ethers.provider.getBalance(sendEthToWallet));
      await expect(layerrWallet.chainCall([15, sendEthToWallet, sendValue, signData, 0], signatures)).to.be.revertedWithCustomError(layerrWallet, "InvalidNonce");
      callNonce++;

      expect(await layerrWallet.currentSigners()).to.equal(currentSignerCount);
      expect(await layerrWallet.chainCallNonce()).to.equal(callNonce);
      expect(await layerrWallet.chainlessCallNonce()).to.equal(chainlessCallNonce);
      expect(await layerrWallet.minimumSignatures()).to.equal(2);

      signData = layerrWallet.interface.encodeFunctionData("removeSigner", ["0x0D8e461687b7D06f86EC348E0c270b0F279855F0"]);
      signatures = [signChainlessCall(layerrWalletPK2, chainlessCallNonce, layerrWallet.target, 0, signData, 0), signChainlessCall(layerrWalletPK3, chainlessCallNonce, layerrWallet.target, 0, signData, 0), signChainlessCall(layerrWalletPK4, chainlessCallNonce, layerrWallet.target, 0, signData, 0), signChainlessCall(layerrWalletPK1, chainlessCallNonce, layerrWallet.target, 0, signData, 0)]
      await layerrWallet.chainlessCall([chainlessCallNonce, layerrWallet.target, 0, signData, 0], signatures);
      chainlessCallNonce++;
      currentSignerCount--;

      expect(await layerrWallet.currentSigners()).to.equal(currentSignerCount);
      expect(await layerrWallet.chainCallNonce()).to.equal(callNonce);
      expect(await layerrWallet.chainlessCallNonce()).to.equal(chainlessCallNonce);
      expect(await layerrWallet.minimumSignatures()).to.equal(2);

      signData = layerrWallet.interface.encodeFunctionData("setMinimumSignatures", [0]);
      signatures = [signChainlessCall(layerrWalletPK2, chainlessCallNonce, layerrWallet.target, 0, signData, 0), signChainlessCall(layerrWalletPK3, chainlessCallNonce, layerrWallet.target, 0, signData, 0), signChainlessCall(layerrWalletPK4, chainlessCallNonce, layerrWallet.target, 0, signData, 0), signChainlessCall(layerrWalletPK1, chainlessCallNonce, layerrWallet.target, 0, signData, 0)]
      await expect(layerrWallet.chainlessCall([chainlessCallNonce, layerrWallet.target, 0, signData, 0], signatures.slice(0,2))).to.be.reverted;
      signData = layerrWallet.interface.encodeFunctionData("setMinimumSignatures", [4]);
      signatures = [signChainlessCall(layerrWalletPK2, chainlessCallNonce, layerrWallet.target, 0, signData, 0), signChainlessCall(layerrWalletPK3, chainlessCallNonce, layerrWallet.target, 0, signData, 0), signChainlessCall(layerrWalletPK4, chainlessCallNonce, layerrWallet.target, 0, signData, 0), signChainlessCall(layerrWalletPK1, chainlessCallNonce, layerrWallet.target, 0, signData, 0)]
      await expect(layerrWallet.chainlessCall([chainlessCallNonce, layerrWallet.target, 0, signData, 0], signatures.slice(0,2))).to.be.reverted;
      signData = layerrWallet.interface.encodeFunctionData("setMinimumSignatures", [3]);
      signatures = [signChainlessCall(layerrWalletPK2, chainlessCallNonce, layerrWallet.target, 0, signData, 0), signChainlessCall(layerrWalletPK3, chainlessCallNonce, layerrWallet.target, 0, signData, 0), signChainlessCall(layerrWalletPK4, chainlessCallNonce, layerrWallet.target, 0, signData, 0), signChainlessCall(layerrWalletPK1, chainlessCallNonce, layerrWallet.target, 0, signData, 0)]
      await expect(layerrWallet.chainlessCall([chainlessCallNonce, layerrWallet.target, 0, signData, 0], signatures.slice(0,2))).to.not.be.reverted;
      chainlessCallNonce++;

      expect(await layerrWallet.currentSigners()).to.equal(currentSignerCount);
      expect(await layerrWallet.chainCallNonce()).to.equal(callNonce);
      expect(await layerrWallet.chainlessCallNonce()).to.equal(chainlessCallNonce);
      expect(await layerrWallet.minimumSignatures()).to.equal(3);

      signatures = [signCall(layerrWalletPK2, callNonce, sendEthToWallet, sendValue, signData, 0), signCall(layerrWalletPK3, callNonce, sendEthToWallet, sendValue, signData, 0), signCall(layerrWalletPK4, callNonce, sendEthToWallet, sendValue, signData, 0), signCall(layerrWalletPK1, callNonce, sendEthToWallet, sendValue, signData, 0)]
      await expect(layerrWallet.chainCall([callNonce, sendEthToWallet, sendValue, signData, 0], [signatures[2], signatures[1]])).to.be.revertedWithCustomError(layerrWallet, "SignaturesOutOfOrder");
      await expect(layerrWallet.chainCall([callNonce, sendEthToWallet, sendValue, signData, 0], [signatures[3]])).to.be.revertedWithCustomError(layerrWallet, "SignaturesOutOfOrder");
      await expect(layerrWallet.chainCall([callNonce, sendEthToWallet, sendValue, signData, 0], signatures.slice(0,4))).to.be.revertedWithCustomError(layerrWallet, "SignaturesOutOfOrder");
      await expect(layerrWallet.chainCall([callNonce, sendEthToWallet, sendValue, signData, 0], signatures.slice(0,2))).to.be.revertedWithCustomError(layerrWallet, "NotEnoughSigners");
      await layerrWallet.chainCall([callNonce, sendEthToWallet, sendValue, signData, 0], signatures.slice(0,3));
      console.log("LayerrWallet balance: " + await ethers.provider.getBalance(layerrWallet.target));
      console.log("Destination balance: " + await ethers.provider.getBalance(sendEthToWallet));
      await expect(layerrWallet.chainCall([15, sendEthToWallet, sendValue, signData, 0], signatures)).to.be.revertedWithCustomError(layerrWallet, "InvalidNonce");
      callNonce++;

      expect(await layerrWallet.currentSigners()).to.equal(currentSignerCount);
      expect(await layerrWallet.chainCallNonce()).to.equal(callNonce);
      expect(await layerrWallet.chainlessCallNonce()).to.equal(chainlessCallNonce);
      expect(await layerrWallet.minimumSignatures()).to.equal(3);

      signatures = [signCall(layerrWalletPK2, callNonce, layerrWallet.target, 0, signData, 0), signCall(layerrWalletPK3, callNonce, layerrWallet.target, 0, signData, 0), signCall(layerrWalletPK4, callNonce, layerrWallet.target, 0, signData, 0), signCall(layerrWalletPK1, callNonce, layerrWallet.target, 0, signData, 0)]
      await expect(layerrWallet.chainCall([callNonce, layerrWallet.target, 0, signData, 0], signatures.slice(0,3))).to.be.revertedWithCustomError(layerrWallet, "CannotCallSelf");

      await expect(layerrWallet.removeSigner("0x09c86CcE2bb6AA0aaae83683A3449Fd2f00A7698")).to.be.revertedWithCustomError(layerrWallet, "InvalidCaller");
      await expect(layerrWallet.addSigner("0x0D8e461687b7D06f86EC348E0c270b0F279855F0")).to.be.revertedWithCustomError(layerrWallet, "InvalidCaller");
      await expect(layerrWallet.setMinimumSignatures(5)).to.be.revertedWithCustomError(layerrWallet, "InvalidCaller");

      signData = layerrWallet.interface.encodeFunctionData("removeSigner", ["0x9e93B94986D2d615ee595AE302A69be040d13179"]);
      signatures = [signChainlessCall(layerrWalletPK2, chainlessCallNonce, layerrWallet.target, 0, signData, 0), signChainlessCall(layerrWalletPK3, chainlessCallNonce, layerrWallet.target, 0, signData, 0), signChainlessCall(layerrWalletPK4, chainlessCallNonce, layerrWallet.target, 0, signData, 0), signChainlessCall(layerrWalletPK1, chainlessCallNonce, layerrWallet.target, 0, signData, 0)]
      await expect(layerrWallet.chainlessCall([chainlessCallNonce, layerrWallet.target, 0, signData, 0], signatures.slice(0,3))).to.be.reverted;
      signData = layerrWallet.interface.encodeFunctionData("setMinimumSignatures", [2]);
      signatures = [signChainlessCall(layerrWalletPK2, chainlessCallNonce, layerrWallet.target, 0, signData, 0), signChainlessCall(layerrWalletPK3, chainlessCallNonce, layerrWallet.target, 0, signData, 0), signChainlessCall(layerrWalletPK4, chainlessCallNonce, layerrWallet.target, 0, signData, 0), signChainlessCall(layerrWalletPK1, chainlessCallNonce, layerrWallet.target, 0, signData, 0)]
      await expect(layerrWallet.chainlessCall([chainlessCallNonce, layerrWallet.target, 0, signData, 0], signatures.slice(0,3))).to.not.be.reverted;
      chainlessCallNonce++;
      signData = layerrWallet.interface.encodeFunctionData("removeSigner", ["0x9e93B94986D2d615ee595AE302A69be040d13179"]);
      signatures = [signChainlessCall(layerrWalletPK2, chainlessCallNonce, layerrWallet.target, 0, signData, 0), signChainlessCall(layerrWalletPK3, chainlessCallNonce, layerrWallet.target, 0, signData, 0), signChainlessCall(layerrWalletPK4, chainlessCallNonce, layerrWallet.target, 0, signData, 0), signChainlessCall(layerrWalletPK1, chainlessCallNonce, layerrWallet.target, 0, signData, 0)]
      await expect(layerrWallet.chainlessCall([chainlessCallNonce, layerrWallet.target, 0, signData, 0], signatures.slice(0,2))).to.not.be.reverted;
      chainlessCallNonce++;
      currentSignerCount--;

      expect(await layerrWallet.currentSigners()).to.equal(currentSignerCount);
      expect(await layerrWallet.chainCallNonce()).to.equal(callNonce);
      expect(await layerrWallet.chainlessCallNonce()).to.equal(chainlessCallNonce);
      expect(await layerrWallet.minimumSignatures()).to.equal(2);

      signData = layerrWallet.interface.encodeFunctionData("removeSigner", ["0x09c86CcE2bb6AA0aaae83683A3449Fd2f00A7698"]);
      signatures = [signChainlessCall(layerrWalletPK2, chainlessCallNonce, layerrWallet.target, 0, signData, 0), signChainlessCall(layerrWalletPK3, chainlessCallNonce, layerrWallet.target, 0, signData, 0), signChainlessCall(layerrWalletPK4, chainlessCallNonce, layerrWallet.target, 0, signData, 0), signChainlessCall(layerrWalletPK1, chainlessCallNonce, layerrWallet.target, 0, signData, 0)]
      await expect(layerrWallet.chainlessCall([chainlessCallNonce, layerrWallet.target, 0, signData, 0], signatures.slice(1,3))).to.be.reverted;
      signData = layerrWallet.interface.encodeFunctionData("setMinimumSignatures", [1]);
      signatures = [signChainlessCall(layerrWalletPK2, chainlessCallNonce, layerrWallet.target, 0, signData, 0), signChainlessCall(layerrWalletPK3, chainlessCallNonce, layerrWallet.target, 0, signData, 0), signChainlessCall(layerrWalletPK4, chainlessCallNonce, layerrWallet.target, 0, signData, 0), signChainlessCall(layerrWalletPK1, chainlessCallNonce, layerrWallet.target, 0, signData, 0)]
      await expect(layerrWallet.chainlessCall([chainlessCallNonce, layerrWallet.target, 0, signData, 0], signatures.slice(1,3))).to.not.be.reverted;
      chainlessCallNonce++;
      signData = layerrWallet.interface.encodeFunctionData("removeSigner", ["0x09c86CcE2bb6AA0aaae83683A3449Fd2f00A7698"]);
      signatures = [signChainlessCall(layerrWalletPK2, chainlessCallNonce, layerrWallet.target, 0, signData, 0), signChainlessCall(layerrWalletPK3, chainlessCallNonce, layerrWallet.target, 0, signData, 0), signChainlessCall(layerrWalletPK4, chainlessCallNonce, layerrWallet.target, 0, signData, 0), signChainlessCall(layerrWalletPK1, chainlessCallNonce, layerrWallet.target, 0, signData, 0)]
      await expect(layerrWallet.chainlessCall([chainlessCallNonce, layerrWallet.target, 0, signData, 0], signatures.slice(1,2))).to.not.be.reverted;
      chainlessCallNonce++;
      currentSignerCount--;

      expect(await layerrWallet.currentSigners()).to.equal(currentSignerCount);
      expect(await layerrWallet.chainCallNonce()).to.equal(callNonce);
      expect(await layerrWallet.chainlessCallNonce()).to.equal(chainlessCallNonce);
      expect(await layerrWallet.minimumSignatures()).to.equal(1);

      signData = layerrWallet.interface.encodeFunctionData("removeSigner", ["0x4353c85595b44e9e55b7fa01e947295B9dF2a242"]);
      signatures = [signChainlessCall(layerrWalletPK2, chainlessCallNonce, layerrWallet.target, 0, signData, 0), signChainlessCall(layerrWalletPK3, chainlessCallNonce, layerrWallet.target, 0, signData, 0), signChainlessCall(layerrWalletPK4, chainlessCallNonce, layerrWallet.target, 0, signData, 0), signChainlessCall(layerrWalletPK1, chainlessCallNonce, layerrWallet.target, 0, signData, 0)]
      await expect(layerrWallet.chainlessCall([chainlessCallNonce, layerrWallet.target, 0, signData, 0], signatures.slice(2,3))).to.be.reverted;
      signData = layerrWallet.interface.encodeFunctionData("setMinimumSignatures", [0]);
      signatures = [signChainlessCall(layerrWalletPK2, chainlessCallNonce, layerrWallet.target, 0, signData, 0), signChainlessCall(layerrWalletPK3, chainlessCallNonce, layerrWallet.target, 0, signData, 0), signChainlessCall(layerrWalletPK4, chainlessCallNonce, layerrWallet.target, 0, signData, 0), signChainlessCall(layerrWalletPK1, chainlessCallNonce, layerrWallet.target, 0, signData, 0)]
      await expect(layerrWallet.chainlessCall([chainlessCallNonce, layerrWallet.target, 0, signData, 0], signatures.slice(2,3))).to.be.reverted;

      expect(await layerrWallet.currentSigners()).to.equal(currentSignerCount);
      expect(await layerrWallet.chainCallNonce()).to.equal(callNonce);
      expect(await layerrWallet.chainlessCallNonce()).to.equal(chainlessCallNonce);
      expect(await layerrWallet.minimumSignatures()).to.equal(1);
    });
    it("Should revert for not contract owner trying to set base URI", async function () {
      const { owner, 
        layerrMinter, layerr1155, layerrRenderer, 
        layerr1155Proxy, proxiedLayerr1155, 
        layerr721Proxy, proxiedLayerr721, 
        layerr721AProxy, proxiedLayerr721A, 
        layerr20Proxy, proxiedLayerr20,
        address2, address3, address4, address5, address6 } = await loadFixture(deployLayerr);
        
      let layerrRenderer2 = new hre.ethers.Contract(layerrRenderer.target, layerrRenderer.interface, address2);
      await expect(layerrRenderer2.setContractBaseTokenUri(proxiedLayerr1155.target, "ipfs://test/", 2)).to.be.revertedWithCustomError(layerrRenderer, "NotContractOwner");
      await expect(layerrRenderer2.setContractUri(proxiedLayerr1155.target, "ipfs://test/")).to.be.revertedWithCustomError(layerrRenderer, "NotContractOwner");
      await expect(layerrRenderer2.setLayerrSigner("0xe03c66583975b44958c53687ea1100adce60f7e7")).to.be.revertedWithCustomError(layerrRenderer, "NotContractOwner");
    });
    it("Should support the correct interfaces", async function () {
      const { owner, 
        layerrMinter, layerr1155, layerrRenderer, 
        layerr1155Proxy, proxiedLayerr1155, 
        layerr721Proxy, proxiedLayerr721, 
        layerr721AProxy, proxiedLayerr721A, 
        layerr20Proxy, proxiedLayerr20,
        address2, address3, address4, address5, address6,
        layerrInterfaceInspect } = await loadFixture(deployLayerr);

      console.log("Layerr20: " + await layerrInterfaceInspect.getLayerr20InterfaceId());
      console.log("Layerr721: " + await layerrInterfaceInspect.getLayerr721InterfaceId());
      console.log("Layerr721A: " + await layerrInterfaceInspect.getLayerr721AInterfaceId());
      console.log("Layerr1155: " + await layerrInterfaceInspect.getLayerr1155InterfaceId());
      console.log("LayerrToken: " + await layerrInterfaceInspect.getLayerrTokenInterfaceId());
      console.log("LayerrRenderer: " + await layerrInterfaceInspect.getLayerrRendererInterfaceId());
      
      //ERC1155
      expect(await proxiedLayerr1155.supportsInterface("0xd9b67a26")).to.equal(true);
      expect(await proxiedLayerr721.supportsInterface("0xd9b67a26")).to.equal(false);
      expect(await proxiedLayerr721A.supportsInterface("0xd9b67a26")).to.equal(false);
      expect(await proxiedLayerr20.supportsInterface("0xd9b67a26")).to.equal(false);
      //ERC1155MetadataURI
      expect(await proxiedLayerr1155.supportsInterface("0x0e89341c")).to.equal(true);
      expect(await proxiedLayerr721.supportsInterface("0x0e89341c")).to.equal(false);
      expect(await proxiedLayerr721A.supportsInterface("0x0e89341c")).to.equal(false);
      expect(await proxiedLayerr20.supportsInterface("0x0e89341c")).to.equal(false);
      //ERC721
      expect(await proxiedLayerr1155.supportsInterface("0x80ac58cd")).to.equal(false);
      expect(await proxiedLayerr721.supportsInterface("0x80ac58cd")).to.equal(true);
      expect(await proxiedLayerr721A.supportsInterface("0x80ac58cd")).to.equal(true);
      expect(await proxiedLayerr20.supportsInterface("0x80ac58cd")).to.equal(false);
      //ERC721Metadata
      expect(await proxiedLayerr1155.supportsInterface("0x5b5e139f")).to.equal(false);
      expect(await proxiedLayerr721.supportsInterface("0x5b5e139f")).to.equal(true);
      expect(await proxiedLayerr721A.supportsInterface("0x5b5e139f")).to.equal(true);
      expect(await proxiedLayerr20.supportsInterface("0x5b5e139f")).to.equal(false);
      //ERC2981
      expect(await proxiedLayerr1155.supportsInterface("0x2a55205a")).to.equal(true);
      expect(await proxiedLayerr721.supportsInterface("0x2a55205a")).to.equal(true);
      expect(await proxiedLayerr721A.supportsInterface("0x2a55205a")).to.equal(true);
      expect(await proxiedLayerr20.supportsInterface("0x2a55205a")).to.equal(true);
      //LayerrToken
      expect(await proxiedLayerr1155.supportsInterface("0x4f723776")).to.equal(true);
      expect(await proxiedLayerr721.supportsInterface("0x4f723776")).to.equal(true);
      expect(await proxiedLayerr721A.supportsInterface("0x4f723776")).to.equal(true);
      expect(await proxiedLayerr20.supportsInterface("0x4f723776")).to.equal(true);
      //ERC173
      expect(await proxiedLayerr1155.supportsInterface("0x7f5828d0")).to.equal(true);
      expect(await proxiedLayerr721.supportsInterface("0x7f5828d0")).to.equal(true);
      expect(await proxiedLayerr721A.supportsInterface("0x7f5828d0")).to.equal(true);
      expect(await proxiedLayerr20.supportsInterface("0x7f5828d0")).to.equal(true);
      //ILayerr1155
      expect(await proxiedLayerr1155.supportsInterface("0xe6551984")).to.equal(true);
      expect(await proxiedLayerr721.supportsInterface("0xe6551984")).to.equal(false);
      expect(await proxiedLayerr721A.supportsInterface("0xe6551984")).to.equal(false);
      expect(await proxiedLayerr20.supportsInterface("0xe6551984")).to.equal(false);
      //ILayerr721
      expect(await proxiedLayerr1155.supportsInterface("0xf5577e59")).to.equal(false);
      expect(await proxiedLayerr721.supportsInterface("0xf5577e59")).to.equal(true);
      expect(await proxiedLayerr721A.supportsInterface("0xf5577e59")).to.equal(false);
      expect(await proxiedLayerr20.supportsInterface("0xf5577e59")).to.equal(false);
      //ILayer721A
      expect(await proxiedLayerr1155.supportsInterface("0x92e8e974")).to.equal(false);
      expect(await proxiedLayerr721.supportsInterface("0x92e8e974")).to.equal(false);
      expect(await proxiedLayerr721A.supportsInterface("0x92e8e974")).to.equal(true);
      expect(await proxiedLayerr20.supportsInterface("0x92e8e974")).to.equal(false);
      //ILayerr20
      expect(await proxiedLayerr1155.supportsInterface("0xc56bc2c9")).to.equal(false);
      expect(await proxiedLayerr721.supportsInterface("0xc56bc2c9")).to.equal(false);
      expect(await proxiedLayerr721A.supportsInterface("0xc56bc2c9")).to.equal(false);
      expect(await proxiedLayerr20.supportsInterface("0xc56bc2c9")).to.equal(true);
      //ILayerrRenderer 
      expect(await layerrRenderer.supportsInterface("0xe9582e66")).to.equal(true);
    });
    it("Mint Functions - Gas Tests", async function () {
      const { owner, 
        layerrMinter, layerr1155, layerrRenderer, 
        layerr1155Proxy, proxiedLayerr1155, 
        layerr721Proxy, proxiedLayerr721, 
        layerr721AProxy, proxiedLayerr721A, 
        layerr20Proxy, proxiedLayerr20,
        address2, address3, address4, address5, address6,
        layerrInterfaceInspect, delegateCash } = await loadFixture(deployLayerr);
        
      let layerrMinter2 = new hre.ethers.Contract(layerrMinter.target, layerrMinter.interface, address2);
      let layerrMinter3 = new hre.ethers.Contract(layerrMinter.target, layerrMinter.interface, address3);
      let layerrMinter5 = new hre.ethers.Contract(layerrMinter.target, layerrMinter.interface, address5);
      let delegateCash_2 = new hre.ethers.Contract(delegateCash.target, delegateCash.interface, address2);
      let proxiedLayerr1155_2 = new hre.ethers.Contract(proxiedLayerr1155.target, proxiedLayerr1155.interface, address2);
      
      var tx;
      var receipt;

      console.log("ERC721 non-sequential: ");
      console.log("First wallet: ");
      tx = await layerrMinter.mint([[[["0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",true,2,0,1,0,0]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],1,"0x0ed39f05fbe22e0afcdaa9d695395d9fa38b46cb5bc21835e1b3d7117625b42a7f4edf86126c41dcc8a18ae0ba4c895505c1c795d515f4191b8770153eaaebaf1b","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000200000")});
      receipt = await tx.wait()
      console.log(receipt.gasUsed);

      console.log("Second wallet: ");
      tx = await layerrMinter2.mint([[[["0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",true,2,1,1,0,0]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],1,"0xc4a00abfaaf08fc635f3fe9fa42e932d9bc7c8adec1754a9e47852d50afaf1ab72ac5111a6f7728b8607eff9358bbe4107fa79293dcee32fc04309215ede39731b","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000200000")});
      receipt = await tx.wait()
      console.log(receipt.gasUsed);

      console.log("");

      console.log("ERC721A:");
      console.log("First wallet w/ allowlist");
      tx = await layerrMinter.mint([[[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",false,2,0,1,100,1]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x7af9632618071a13d0e29303fe0639b5ebc050a0088406d9330e6790c5012e08",0,false],1,"0x36abb083d86c56910005689d6e34f3e32ec58fe1fd7540db32eadc269d094f04671da04fc8f6b13e570a01e4eff4899e7a12589c611dad02df4b02a2127b8e801c","0x00",["0xe96bd494eab8f3432b9292d1c247cb6c6a7820df810fbc8421b089fb74741ccd","0x47e61b0dd2d29a007ff31525df2dddf90bb8212ea5e245fe884c9ef8692927a5","0xdc1fd37824e674a202b72e985ace2977b6bfbb1e538daa8b327df9f6296239ff","0xd85e763487fafb493d0561a88d353f4512ff775abd12c8de2d7ec5dd8ab5b265","0x877d0b3daa6d0fa3940cb80c3b20ab31232daf9b1015562acd8e1660f61ca579","0xf489f4e10c498d3db9416e71cdb51520b29bb6d9fee46a19fd62c945adf8a9eb","0xccc10374e72239922c91568426225de23110245c9a590f92847b4c2f2c0a8471","0x7d57b0bcf499a41537cf5d60ac2c0446ecaae4219770b2749ea863eb0f8b0a59","0x40507785ecb965ad167eabb93b42eca6b9182d31b217199269551e54acff1746","0x7fbc35587c1aa0859f23c7d84c9bbc324de67ea4bc7d08adc756f7de92de473d","0x629756ae4dd1b1b03636d3efdd8b2d1e75bb75267f22e586d20783d90c560826","0x99535e19ebab9cb9d7dc9f03063bc82e6ecd28680c3c9c2dfd6b531d7e58aca5","0xe4cc2d08ff84068dea710de9e828e4b1ced182a46210d1fc861800cb81c71125"],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000200000")});
      receipt = await tx.wait()
      console.log(receipt.gasUsed);
      console.log("Second wallet w/ allowlist via delegate.cash: ")
      await delegateCash_2.delegateForAll(address5.address, true);
      tx = await layerrMinter5.mint([[[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",false,2,0,1,100,1]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x7af9632618071a13d0e29303fe0639b5ebc050a0088406d9330e6790c5012e08",0,false],1,"0x36abb083d86c56910005689d6e34f3e32ec58fe1fd7540db32eadc269d094f04671da04fc8f6b13e570a01e4eff4899e7a12589c611dad02df4b02a2127b8e801c","0x00",["0x0039d8715601ecfc758fa1b5d024764cab36aec36853668f84d99d8fb567eb82","0x1cdd8450273dfffb41b58fa3eeaff5eeee3838d5ba692130113b747a47888513","0x4abffc9dc4d4d2f8ce8b13977ea1a5379b4edce9dc6b44285bad96b67fbc780a","0xd85f72f853d11c771fe8ba267c742d8e9e7f1c549c194df3a7bdd081dbc315b2","0x1d488dc6b938006f609738221065269e444b46c1aa5e174604c5a3290dfa33f0","0x46b19170c3dd5ec82befaa1e2bafa7f8ada1653cf2e906cbd240212722a2f715","0x5e4ce910785c8dd52a4798ba988dd3ea338005877bff019818b8ef86524e0390","0x7d75828022c17f541c649fdff605588eb4c279e2fe214163686f1256f4dbba49","0x94b90a18118f20a441cb20d18178afe50aa32ba5768ad761768564a89a13da66","0x059ef41635f9f575961378550d0cf96f1e9f181ecb5c9bb087b15c475b65eb1d","0x596c630e202ccd26c48f062b2d4bf7ab3d614ec81ce1f8c46efcde97824cb926","0xb0b315be5fea95b5005b4494fda794d67d80533d9e21c8202090594538514a5d","0x548cfefc127c5bbf0255aa8d953142072a6821d22e8ed94e8edea8f5f585b0bd"],[], "0x0000000000000000000000000000000000000000", address2.address], {value: ethers.parseEther("0.000000000000200000")});
      receipt = await tx.wait()
      console.log(receipt.gasUsed);

      /*tx = await layerrMinter2.mint([[[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",false,2,0,1,100,1]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x7af9632618071a13d0e29303fe0639b5ebc050a0088406d9330e6790c5012e08",0,false],1,"0x36abb083d86c56910005689d6e34f3e32ec58fe1fd7540db32eadc269d094f04671da04fc8f6b13e570a01e4eff4899e7a12589c611dad02df4b02a2127b8e801c","0x00",["0x0039d8715601ecfc758fa1b5d024764cab36aec36853668f84d99d8fb567eb82","0x1cdd8450273dfffb41b58fa3eeaff5eeee3838d5ba692130113b747a47888513","0x4abffc9dc4d4d2f8ce8b13977ea1a5379b4edce9dc6b44285bad96b67fbc780a","0xd85f72f853d11c771fe8ba267c742d8e9e7f1c549c194df3a7bdd081dbc315b2","0x1d488dc6b938006f609738221065269e444b46c1aa5e174604c5a3290dfa33f0","0x46b19170c3dd5ec82befaa1e2bafa7f8ada1653cf2e906cbd240212722a2f715","0x5e4ce910785c8dd52a4798ba988dd3ea338005877bff019818b8ef86524e0390","0x7d75828022c17f541c649fdff605588eb4c279e2fe214163686f1256f4dbba49","0x94b90a18118f20a441cb20d18178afe50aa32ba5768ad761768564a89a13da66","0x059ef41635f9f575961378550d0cf96f1e9f181ecb5c9bb087b15c475b65eb1d","0x596c630e202ccd26c48f062b2d4bf7ab3d614ec81ce1f8c46efcde97824cb926","0xb0b315be5fea95b5005b4494fda794d67d80533d9e21c8202090594538514a5d","0x548cfefc127c5bbf0255aa8d953142072a6821d22e8ed94e8edea8f5f585b0bd"],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000200000")});
      receipt = await tx.wait()
      console.log(receipt.gasUsed);*/

      console.log("Third wallet public mint: ")
      tx = await layerrMinter3.mint([[[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",false,2,0,1,100,3]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],1,"0xf0efbd89034cc675e07fa33b29395bb5adbc5a0c6acf20e55a182f4a5f4521385d5f5fc3ef5d451a77c92983955ad8a6573c64251a9db0d2a10403eb53a14cdf1c","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000200000")});
      receipt = await tx.wait()
      console.log(receipt.gasUsed);
      console.log("Third wallet public mint two more: ")
      tx = await layerrMinter3.mint([[[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",false,2,0,1,100,3]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],2,"0xf0efbd89034cc675e07fa33b29395bb5adbc5a0c6acf20e55a182f4a5f4521385d5f5fc3ef5d451a77c92983955ad8a6573c64251a9db0d2a10403eb53a14cdf1c","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000400000")});
      receipt = await tx.wait()
      console.log(receipt.gasUsed);

      
      console.log("Third wallet 2x burn 1 token to mint 5 new: ")
      let proxiedLayerr721A_3 = new hre.ethers.Contract(proxiedLayerr721A.target, proxiedLayerr721A.interface, address3);
      await proxiedLayerr721A_3.setApprovalForAll(layerrMinter.target, true);
      tx = await layerrMinter3.mint([[[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",false,2,0,5,0,0]],[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",false,2,0,0,1]],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],2,"0x8ed4625f8d96263ed0dbe96cbbcc8e4cb82bd933782632b346a906537099657937fe372a1f561498a9b2da2570b54dac7897798114d767650b61bd9fdb015ece1c","0x00",[],[3,4], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000400000")});
      receipt = await tx.wait()
      console.log(receipt.gasUsed);

      
      console.log("ERC721A + ERC20:");
      console.log("First wallet");
      tx = await layerrMinter.mint([[[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",false,2,0,1,0,0],["0x8A791620dd6260079BF849Dc5567aDC3F2FdC318",false,1,0,5000,0,0]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],2,"0x7a4c09bca3f6647da85af2ce639f95375cd096efbc4b328915843bf10a11dacb2019bd13ae4f393959cd4a7cf43867ccb3593701b61782a958a683708830028d1b","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000400000")});
      receipt = await tx.wait()
      console.log(receipt.gasUsed);
      console.log("Second wallet");
      tx = await layerrMinter2.mint([[[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",false,2,0,1,0,0],["0x8A791620dd6260079BF849Dc5567aDC3F2FdC318",false,1,0,5000,0,0]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],2,"0x7a4c09bca3f6647da85af2ce639f95375cd096efbc4b328915843bf10a11dacb2019bd13ae4f393959cd4a7cf43867ccb3593701b61782a958a683708830028d1b","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000400000")});
      receipt = await tx.wait()
      console.log(receipt.gasUsed);
      console.log("Second wallet, second mint");
      tx = await layerrMinter2.mint([[[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",false,2,0,1,0,0],["0x8A791620dd6260079BF849Dc5567aDC3F2FdC318",false,1,0,5000,0,0]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],2,"0x7a4c09bca3f6647da85af2ce639f95375cd096efbc4b328915843bf10a11dacb2019bd13ae4f393959cd4a7cf43867ccb3593701b61782a958a683708830028d1b","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000400000")});
      receipt = await tx.wait()
      console.log(receipt.gasUsed);
      console.log("Third wallet");
      tx = await layerrMinter3.mint([[[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",false,2,0,1,0,0],["0x8A791620dd6260079BF849Dc5567aDC3F2FdC318",false,1,0,5000,0,0]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],2,"0x7a4c09bca3f6647da85af2ce639f95375cd096efbc4b328915843bf10a11dacb2019bd13ae4f393959cd4a7cf43867ccb3593701b61782a958a683708830028d1b","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000400000")});
      receipt = await tx.wait()
      console.log(receipt.gasUsed);
      console.log("Third wallet, second mint");
      tx = await layerrMinter3.mint([[[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",false,2,0,1,0,0],["0x8A791620dd6260079BF849Dc5567aDC3F2FdC318",false,1,0,5000,0,0]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],2,"0x7a4c09bca3f6647da85af2ce639f95375cd096efbc4b328915843bf10a11dacb2019bd13ae4f393959cd4a7cf43867ccb3593701b61782a958a683708830028d1b","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000400000")});
      receipt = await tx.wait()
      console.log(receipt.gasUsed);
      console.log("Third wallet, free mint, supply cap");
      tx = await layerrMinter3.mint([[[["0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",false,2,0,1,5000,0]],[],[],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],2,"0xe1b70309f4bbe1acfbd0f30d19e66f695f671e1b75e746c514901529380dba210120d3afc6060156a71808ce401ca37c3ff686e99cc76615c0b21c630ef15c871c","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0")});
      receipt = await tx.wait()
      console.log(receipt.gasUsed);

      console.log("");

      console.log("ERC1155P Mint 6 Tokens: ");
      console.log("First wallet: ");
      tx = await layerrMinter.mint([[[["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,0,1,100,0],["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,1,1,100,0],["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,2,1,100,0],["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,3,1,100,0],["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,4,1,100,0],["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,5,1,100,0]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],1,"0x7f166d17be4a6414465d841493a9d7db6f4a76c69d1794853d340f2efd3f09f603bd58317193c1a514db47376f1bc431964a505e244ce95eeb6d7ae230f9ac5b1c","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000200000")});
      receipt = await tx.wait()
      console.log(receipt.gasUsed);
      console.log("Second wallet: ");
      tx = await layerrMinter2.mint([[[["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,0,1,100,0],["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,1,1,100,0],["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,2,1,100,0],["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,3,1,100,0],["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,4,1,100,0],["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,5,1,100,0]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],1,"0x7f166d17be4a6414465d841493a9d7db6f4a76c69d1794853d340f2efd3f09f603bd58317193c1a514db47376f1bc431964a505e244ce95eeb6d7ae230f9ac5b1c","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000200000")});
      receipt = await tx.wait()
      console.log(receipt.gasUsed);
      await proxiedLayerr1155.setApprovalForAll(layerrMinter.target, true);
      await proxiedLayerr1155_2.setApprovalForAll(layerrMinter.target, true);
      console.log("ERC1155P Burn 6 Tokens, Mint 1: ");
      console.log("First wallet: ");
      tx = await layerrMinter.mint([[[["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,6,1,100,0]],[["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,0,0,1],["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,0,1,1],["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,0,2,1],["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,0,3,1],["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,0,4,1],["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,0,5,1]],[["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],1,"0xa84986d502e8b90bea77c6c7a42e0b5f9d696465cbd1a021c7b9935f274cd6a97eb14361a6a8913dc6922f3bbca9fe0db904ab129e0323473548aec82fef3d1b1c","0x00",[],[0,1,2,3,4,5], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000100000")});
      receipt = await tx.wait()
      console.log(receipt.gasUsed);
      console.log("Second wallet: ");
      tx = await layerrMinter2.mint([[[["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,6,1,100,0]],[["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,0,0,1],["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,0,1,1],["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,0,2,1],["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,0,3,1],["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,0,4,1],["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,0,5,1]],[["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],1,"0xa84986d502e8b90bea77c6c7a42e0b5f9d696465cbd1a021c7b9935f274cd6a97eb14361a6a8913dc6922f3bbca9fe0db904ab129e0323473548aec82fef3d1b1c","0x00",[],[0,1,2,3,4,5], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000100000")});
      receipt = await tx.wait()
      console.log(receipt.gasUsed);

      console.log("");

      console.log("ERC1155P Max Per Wallet");
      console.log("First wallet: ");
      tx = await layerrMinter.mint([[[["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,16,1,0,3]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],3,"0x718111cdab4a9356bda9c584c957fc0536f0b1093349e4fbe98f69abdd2658bd7664d8c29f0cff9c9aa0846a785006b9224e1221b1f6f02d20f055d4af337d4d1b","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000600000")});
      receipt = await tx.wait()
      console.log(receipt.gasUsed);
      console.log("Second wallet: ");
      tx = await layerrMinter2.mint([[[["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,16,1,0,3]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],1,"0x718111cdab4a9356bda9c584c957fc0536f0b1093349e4fbe98f69abdd2658bd7664d8c29f0cff9c9aa0846a785006b9224e1221b1f6f02d20f055d4af337d4d1b","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000200000")});
      receipt = await tx.wait()
      console.log(receipt.gasUsed);

      console.log("");

      console.log("ERC1155P Max Total Supply");
      console.log("First wallet: ");
      tx = await layerrMinter.mint([[[["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,48,1,100,0]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],3,"0x7cbf375b67006011cdc4cd9c88143543a4c6a880acb8b31e35d4c8f4758a90f4620205a746434efab17491294cd13628430f408b74fe49275608ed258c7398e41b","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000600000")});
      receipt = await tx.wait()
      console.log(receipt.gasUsed);
      console.log("Second wallet: ");
      tx = await layerrMinter2.mint([[[["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,48,1,100,0]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],1,"0x7cbf375b67006011cdc4cd9c88143543a4c6a880acb8b31e35d4c8f4758a90f4620205a746434efab17491294cd13628430f408b74fe49275608ed258c7398e41b","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000200000")});
      receipt = await tx.wait()
      console.log(receipt.gasUsed);

      console.log("");

      console.log("ERC1155P Max Per Wallet & Total Supply");
      console.log("First wallet: ");
      tx = await layerrMinter.mint([[[["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,80,1,100,5]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],1,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],3,"0xd5491bf416e4c0bcec7de1d6760665a4f346d34086872157b727dd0a72c987ba3c859c3a618794b833ddcb12f035613f8163d2649d2e325444f32b422a3751db1b","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000600000")});
      receipt = await tx.wait()
      console.log(receipt.gasUsed);
      console.log("Second wallet: ");
      tx = await layerrMinter2.mint([[[["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,80,1,100,5]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],1,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],1,"0xd5491bf416e4c0bcec7de1d6760665a4f346d34086872157b727dd0a72c987ba3c859c3a618794b833ddcb12f035613f8163d2649d2e325444f32b422a3751db1b","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000200000")});
      receipt = await tx.wait()
      console.log(receipt.gasUsed);

      console.log("");

      console.log("ERC1155P Max Total Supply 1 Payment");
      console.log("First wallet: ");
      tx = await layerrMinter.mint([[[["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,64,1,100,0]],[],[["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],3,"0x9ebf832ee5f4d96c5bc1b1cd4ae66f759530953bd75c126d8cf498adae2d6085060ab491974215fdf0cc3b5ac9c84ebd67f3d05cf1586801f4d96548c11aba591b","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000300000")});
      receipt = await tx.wait()
      console.log(receipt.gasUsed);
      console.log("Second wallet: ");
      tx = await layerrMinter2.mint([[[["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,64,1,100,0]],[],[["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],1,"0x9ebf832ee5f4d96c5bc1b1cd4ae66f759530953bd75c126d8cf498adae2d6085060ab491974215fdf0cc3b5ac9c84ebd67f3d05cf1586801f4d96548c11aba591b","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000100000")});
      receipt = await tx.wait()
      console.log(receipt.gasUsed);

      console.log("");

      console.log("ERC1155P No Limits");
      console.log("First wallet: ");
      tx = await layerrMinter.mint([[[["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,32,1,0,0]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],3,"0x1fa649b0fc79ce758da5d44e076adb0c543a3d1680bd9abb440c719bd872fcd726ea8383e85b5baf2ef6f6168989c5015ec981e92fe438bd313a238af3ba4c221b","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000600000")});
      receipt = await tx.wait()
      console.log(receipt.gasUsed);
      console.log("First wallet, second mint: ");
      tx = await layerrMinter.mint([[[["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,32,1,0,0]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],3,"0x1fa649b0fc79ce758da5d44e076adb0c543a3d1680bd9abb440c719bd872fcd726ea8383e85b5baf2ef6f6168989c5015ec981e92fe438bd313a238af3ba4c221b","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000600000")});
      receipt = await tx.wait()
      console.log(receipt.gasUsed);
      console.log("Second wallet: ");
      tx = await layerrMinter2.mint([[[["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,32,1,0,0]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],1,"0x1fa649b0fc79ce758da5d44e076adb0c543a3d1680bd9abb440c719bd872fcd726ea8383e85b5baf2ef6f6168989c5015ec981e92fe438bd313a238af3ba4c221b","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000200000")});
      receipt = await tx.wait()
      console.log(receipt.gasUsed);
      console.log("Sixth wallet via mintTo: ");
      tx = await layerrMinter2.mintTo(address6.address, [[[["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,32,1,0,0]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,false],1,"0x1fa649b0fc79ce758da5d44e076adb0c543a3d1680bd9abb440c719bd872fcd726ea8383e85b5baf2ef6f6168989c5015ec981e92fe438bd313a238af3ba4c221b","0x00",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], 1, {value: ethers.parseEther("0.000000000000200000")});
      receipt = await tx.wait()
      console.log(receipt.gasUsed);

      console.log("");

      console.log("Airdrop ERC1155P: ");
      tx = await proxiedLayerr1155.airdrop([address5.address], [1155], [1]);
      receipt = await tx.wait()
      console.log(receipt.gasUsed);

      
      console.log("Contracts owner balance: " + await ethers.provider.getBalance(owner.address));
      console.log("Payment #1 balance: " + await ethers.provider.getBalance("0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2"));
      console.log("Payment #2 balance: " + await ethers.provider.getBalance("0x617F2E2fD72FD9D5503197092aC168c91465E7f2"));
      console.log("ERC1155P Oracle Signature");
      console.log("First wallet, third mint w/ oracle: ");
      await proxiedLayerr1155.setContractAllowedOracle(layerrMinter.target, oracle_signer, true);
      tx = await layerrMinter.mint([[[["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",true,3,32,1,0,0]],[],[["0x0000000000000000000000000000000000000000",0,"0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",100000, 100],["0x0000000000000000000000000000000000000000",0,"0x617F2E2fD72FD9D5503197092aC168c91465E7f2",100000,0]],0,4000000000,0,"0x0000000000000000000000000000000000000000000000000000000000000000",0,true],3,"0xd8b7ee4d951c2df4141c6f0d771620d6e9b766b5e6bc1f5322fd9c55b827171c7d036b64f67ee4d7aff8bd723f28d170063e3659a1431535db88b2bd81201c7c1c","0xa51d3dac7b6de19485740af755af71dc9ec3616eea12585fa8f2ee1a12e350d3517b119f41afc51e8fa82adf4b8f129467a2ab32e42ba7435999a66a4dea9f221c",[],[], "0x0000000000000000000000000000000000000000", "0x0000000000000000000000000000000000000000"], {value: ethers.parseEther("0.000000000000600000")});
      receipt = await tx.wait()
      console.log(receipt.gasUsed);
      console.log("Contracts owner balance: " + await ethers.provider.getBalance(owner.address));
      console.log("Payment #1 balance: " + await ethers.provider.getBalance("0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2"));
      console.log("Payment #2 balance: " + await ethers.provider.getBalance("0x617F2E2fD72FD9D5503197092aC168c91465E7f2"));
    });
    it("Log Addresses", async function () {
      const { owner, 
        layerrMinter, layerr1155, layerrRenderer, 
        layerr1155Proxy, proxiedLayerr1155, 
        layerr721Proxy, proxiedLayerr721, 
        layerr721AProxy, proxiedLayerr721A, 
        layerr20Proxy, proxiedLayerr20,
        address2, address3, address4, address5, address6, layerrWallet } = await loadFixture(deployLayerr);
      
      console.log("Contract addresses: ");
      console.log("LayerrMinter: " + layerrMinter.target);
      console.log("Layerr1155 Proxy: " + layerr1155Proxy.target);
      console.log("Layerr721 Proxy: " + layerr721Proxy.target);
      console.log("Layerr721A Proxy: " + layerr721AProxy.target);
      console.log("Layerr20 Proxy: " + layerr20Proxy.target);
      console.log("LayerrWallet: " + layerrWallet.target);
      console.log("");
      console.log("EOAs:");
      console.log("Contracts owner: " + owner.address);
      console.log("EOA #2: " + address2.address);
      console.log("EOA #3: " + address3.address);
      console.log("EOA #4: " + address4.address);
      console.log("EOA #5: " + address5.address);
      console.log("EOA #6: " + address6.address);
      console.log("");
    });
  });
});